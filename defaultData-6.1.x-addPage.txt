import com.liferay.portal.kernel.util.UnicodeProperties;
import com.liferay.portal.model.Group;
import com.liferay.portal.model.Layout;
import com.liferay.portal.service.GroupLocalServiceUtil;
import com.liferay.portal.service.LayoutLocalServiceUtil;
import com.liferay.portal.service.PortletPreferencesLocalServiceUtil;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.service.ServiceContextFactory;
import com.liferay.portal.theme.ThemeDisplay;
import com.liferay.portal.util.PortalUtil;
import com.liferay.portal.util.WebKeys;
import com.liferay.portlet.PortletPreferencesFactoryUtil;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;

import javax.portlet.PortletPreferences;

//Add Site

userId = PortalUtil.getUserId(actionRequest);

ThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(
	WebKeys.THEME_DISPLAY);

companyId = themeDisplay.getCompanyId();

Group group = GroupLocalServiceUtil.getGroup(companyId, "Guest");

groupId = group.getGroupId();

ServiceContext serviceContext = ServiceContextFactory.getInstance(
	Group.class.getName(), actionRequest);

//ADD PAGE

//Collaboration Part

Map<Locale, String> nameMapCollaboration = new HashMap<Locale, String>();

nameMapCollaboration.put(Locale.US, "Collaboration");

Map<Locale, String> titleMapCollaboration = new HashMap<Locale, String>();

titleMapCollaboration.put(Locale.US, "");

Map<Locale, String> descriptionMapCollaboration =
	new HashMap<Locale, String>();

descriptionMapCollaboration.put(Locale.US, "");

Map<Locale, String> keywordsMapCollaboration = new HashMap<Locale, String>();

keywordsMapCollaboration.put(Locale.US, "");

Map<Locale, String> robotsMapCollaboration = new HashMap<Locale, String>();

robotsMapCollaboration.put(Locale.US, "");

friendlyURLMapCollaboration = "/collaboration";

Layout collaborationLayout = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, 0, nameMapCollaboration, titleMapCollaboration,
	descriptionMapCollaboration, keywordsMapCollaboration,
	robotsMapCollaboration, "link_to_layout", false,
	friendlyURLMapCollaboration, serviceContext);

collaborationlayoutId = collaborationLayout.getLayoutId();

Map<Locale, String> nameMapBlog = new HashMap<Locale, String>();

nameMapBlog.put(Locale.US, "Blogs");

Map<Locale, String> titleMapBlog = new HashMap<Locale, String>();

titleMapBlog.put(Locale.US, "");

Map<Locale, String> descriptionMapBlog = new HashMap<Locale, String>();

descriptionMapBlog.put(Locale.US, "");

Map<Locale, String> keywordsMapBlog = new HashMap<Locale, String>();

keywordsMapBlog.put(Locale.US, "");

Map<Locale, String> robotsMapBlog = new HashMap<Locale, String>();

robotsMapBlog.put(Locale.US, "");

friendlyURLMapBlog = "/blogs";

Layout layoutBlogs = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, collaborationlayoutId, nameMapBlog,
	titleMapBlog, descriptionMapBlog, keywordsMapBlog, robotsMapBlog,
	"portlet", false, friendlyURLMapBlog, serviceContext);

UnicodeProperties typeSettingsPropertiesBlog =
	layoutBlogs.getTypeSettingsProperties();

typeSettingsPropertiesBlog.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesBlog.setProperty("column-1", "71_INSTANCE_rETjYe1irD4L");
typeSettingsPropertiesBlog.setProperty("column-2", "115,33,114");

layoutBlogs.setTypeSettingsProperties(typeSettingsPropertiesBlog);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutBlogs.getLayoutId(),
	layoutBlogs.getTypeSettings());

UnicodeProperties propertiesBlog = new UnicodeProperties();

propertiesBlog.setProperty("displayStyle", "from-level-0");
propertiesBlog.setProperty("headerType", "root-layout");
propertiesBlog.setProperty("bulletStyle", "dots");
propertiesBlog.setProperty("rootLayoutType", "absolute");
propertiesBlog.setProperty("includedLayouts", "auto");
propertiesBlog.setProperty("nestedChildren", "1");
propertiesBlog.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceBlog", "71_INSTANCE_rETjYe1irD4L");

portletResourceBlog = (String)actionRequest.getAttribute(
	"portletResourceBlog");

PortletPreferences portletPreferencesBlog =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceBlog);

for (Map.Entry<String, String> entry : propertiesBlog.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesBlog.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutBlogs.getPlid(), "71_INSTANCE_rETjYe1irD4L",
	portletPreferencesBlog);

Map<Locale, String> nameMapCalendar = new HashMap<Locale, String>();

nameMapCalendar.put(Locale.US, "Calendar");

Map<Locale, String> titleMapCalendar = new HashMap<Locale, String>();

titleMapCalendar.put(Locale.US, "");

Map<Locale, String> descriptionMapCalendar = new HashMap<Locale, String>();

descriptionMapCalendar.put(Locale.US, "");

Map<Locale, String> keywordsMapCalendar = new HashMap<Locale, String>();

keywordsMapCalendar.put(Locale.US, "");

Map<Locale, String> robotsMapCalendar = new HashMap<Locale, String>();

robotsMapCalendar.put(Locale.US, "");

friendlyURLMapCalendar = "/calendar";

Layout layoutCalendar = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, collaborationlayoutId, nameMapCalendar,
	titleMapCalendar, descriptionMapCalendar, keywordsMapCalendar,
	robotsMapCalendar, "portlet", false, friendlyURLMapCalendar,
	serviceContext);

UnicodeProperties typeSettingsPropertiesCalendar =
	layoutCalendar.getTypeSettingsProperties();

typeSettingsPropertiesCalendar.setProperty(
	"layout-template-id", "2_columns_ii");
typeSettingsPropertiesCalendar.setProperty(
	"column-1", "71_INSTANCE_uixmz2y3dFa6");
typeSettingsPropertiesCalendar.setProperty("column-2", "8");

layoutCalendar.setTypeSettingsProperties(typeSettingsPropertiesCalendar);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutCalendar.getLayoutId(),
	layoutCalendar.getTypeSettings());

UnicodeProperties propertiesCalendar = new UnicodeProperties();

propertiesCalendar.setProperty("displayStyle", "from-level-0");
propertiesCalendar.setProperty("headerType", "root-layout");
propertiesCalendar.setProperty("bulletStyle", "dots");
propertiesCalendar.setProperty("rootLayoutType", "absolute");
propertiesCalendar.setProperty("includedLayouts", "auto");
propertiesCalendar.setProperty("nestedChildren", "1");
propertiesCalendar.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute(
	"portletResourceCalendar", "71_INSTANCE_uixmz2y3dFa6");

portletResourceCalendar = (String)actionRequest.getAttribute(
	"portletResourceCalendar");

PortletPreferences portletPreferencesCalendar =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceCalendar);

for (Map.Entry<String, String> entry : propertiesCalendar.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesCalendar.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutCalendar.getPlid(), "71_INSTANCE_uixmz2y3dFa6",
	portletPreferencesCalendar);

Map<Locale, String> nameMapDD = new HashMap<Locale, String>();

nameMapDD.put(Locale.US, "Dynamic Data");

Map<Locale, String> titleMapDD = new HashMap<Locale, String>();

titleMapDD.put(Locale.US, "");

Map<Locale, String> descriptionMapDD = new HashMap<Locale, String>();

descriptionMapDD.put(Locale.US, "");

Map<Locale, String> keywordsMapDD = new HashMap<Locale, String>();

keywordsMapDD.put(Locale.US, "");

Map<Locale, String> robotsMapDD = new HashMap<Locale, String>();

robotsMapDD.put(Locale.US, "");

friendlyURLMapDD = "/dynamic-data";

Layout layoutDD = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, collaborationlayoutId, nameMapDD, titleMapDD,
	descriptionMapDD, keywordsMapDD, robotsMapDD, "portlet", false,
	friendlyURLMapDD, serviceContext);

UnicodeProperties typeSettingsPropertiesDD =
	layoutDD.getTypeSettingsProperties();

typeSettingsPropertiesDD.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesDD.setProperty("column-1", "71_INSTANCE_cpWOAkKlrbl2");
typeSettingsPropertiesDD.setProperty("column-2", "169_INSTANCE_yOInr1Ynqt0S");

layoutDD.setTypeSettingsProperties(typeSettingsPropertiesDD);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutDD.getLayoutId(),
	layoutDD.getTypeSettings());

UnicodeProperties propertiesDD = new UnicodeProperties();

propertiesDD.setProperty("displayStyle", "from-level-0");
propertiesDD.setProperty("headerType", "root-layout");
propertiesDD.setProperty("bulletStyle", "dots");
propertiesDD.setProperty("rootLayoutType", "absolute");
propertiesDD.setProperty("includedLayouts", "auto");
propertiesDD.setProperty("nestedChildren", "1");
propertiesDD.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceDD", "71_INSTANCE_cpWOAkKlrbl2");

portletResourceDD = (String)actionRequest.getAttribute("portletResourceDD");

PortletPreferences portletPreferencesDD =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceDD);

for (Map.Entry<String, String> entry : propertiesDD.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesDD.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutDD.getPlid(), "71_INSTANCE_cpWOAkKlrbl2",
	portletPreferencesDD);

Map<Locale, String> nameMapWikiPortlet = new HashMap<Locale, String>();

nameMapWikiPortlet.put(Locale.US, "Wiki");

Map<Locale, String> titleMapWikiPortlet = new HashMap<Locale, String>();

titleMapWikiPortlet.put(Locale.US, "");

Map<Locale, String> descriptionMapWikiPortlet = new HashMap<Locale, String>();

descriptionMapWikiPortlet.put(Locale.US, "");

Map<Locale, String> keywordsMapWikiPortlet = new HashMap<Locale, String>();

keywordsMapWikiPortlet.put(Locale.US, "");

Map<Locale, String> robotsMapWikiPortlet = new HashMap<Locale, String>();

robotsMapWikiPortlet.put(Locale.US, "");

friendlyURLMapWikiPortlet = "/wiki";

Layout layoutWikiPortlet = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, collaborationlayoutId, nameMapWikiPortlet,
	titleMapWikiPortlet, descriptionMapWikiPortlet, keywordsMapWikiPortlet,
	robotsMapWikiPortlet, "portlet", false, friendlyURLMapWikiPortlet,
	serviceContext);

UnicodeProperties typeSettingsPropertiesWikiPortlet =
	layoutWikiPortlet.getTypeSettingsProperties();

typeSettingsPropertiesWikiPortlet.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesWikiPortlet.setProperty("column-1", "71_INSTANCE_cpWOAkKlrbl3");
typeSettingsPropertiesWikiPortlet.setProperty("column-2", "36");

layoutWikiPortlet.setTypeSettingsProperties(typeSettingsPropertiesWikiPortlet);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutWikiPortlet.getLayoutId(),
	layoutWikiPortlet.getTypeSettings());

UnicodeProperties propertiesWikiPortlet = new UnicodeProperties();

propertiesWikiPortlet.setProperty("displayStyle", "from-level-0");
propertiesWikiPortlet.setProperty("headerType", "root-layout");
propertiesWikiPortlet.setProperty("bulletStyle", "dots");
propertiesWikiPortlet.setProperty("rootLayoutType", "absolute");
propertiesWikiPortlet.setProperty("includedLayouts", "auto");
propertiesWikiPortlet.setProperty("nestedChildren", "1");
propertiesWikiPortlet.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute(
	"portletResourceWikiPortlet", "71_INSTANCE_cpWOAkKlrbl3");

portletResourceWikiPortlet = (String)actionRequest.getAttribute(
	"portletResourceWikiPortlet");

PortletPreferences portletPreferencesWikiPortlet =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceWikiPortlet);

for (Map.Entry<String, String> entry : propertiesWikiPortlet.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesWikiPortlet.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutWikiPortlet.getPlid(), "71_INSTANCE_cpWOAkKlrbl3",
	portletPreferencesWikiPortlet);

Map<Locale, String> nameMapMB = new HashMap<Locale, String>();

nameMapMB.put(Locale.US, "Message Board");

Map<Locale, String> titleMapMB = new HashMap<Locale, String>();

titleMapMB.put(Locale.US, "");

Map<Locale, String> descriptionMapMB = new HashMap<Locale, String>();

descriptionMapMB.put(Locale.US, "");

Map<Locale, String> keywordsMapMB = new HashMap<Locale, String>();

keywordsMapMB.put(Locale.US, "");

Map<Locale, String> robotsMapMB = new HashMap<Locale, String>();

robotsMapMB.put(Locale.US, "");

friendlyURLMapMB = "/message-board";

Layout layoutMB = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, collaborationlayoutId, nameMapMB, titleMapMB,
	descriptionMapMB, keywordsMapMB, robotsMapMB, "portlet", false,
	friendlyURLMapMB, serviceContext);

UnicodeProperties typeSettingsPropertiesMB =
	layoutMB.getTypeSettingsProperties();

typeSettingsPropertiesMB.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesMB.setProperty("column-1", "71_INSTANCE_vRgh12ulcIbj");
typeSettingsPropertiesMB.setProperty("column-2", "19");

layoutMB.setTypeSettingsProperties(typeSettingsPropertiesMB);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutMB.getLayoutId(),
	layoutMB.getTypeSettings());

UnicodeProperties propertiesMB = new UnicodeProperties();

propertiesMB.setProperty("displayStyle", "from-level-0");
propertiesMB.setProperty("headerType", "root-layout");
propertiesMB.setProperty("bulletStyle", "dots");
propertiesMB.setProperty("rootLayoutType", "absolute");
propertiesMB.setProperty("includedLayouts", "auto");
propertiesMB.setProperty("nestedChildren", "1");
propertiesMB.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceMB", "71_INSTANCE_vRgh12ulcIbj");

portletResourceMB = (String)actionRequest.getAttribute("portletResourceMB");

PortletPreferences portletPreferencesMB =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceMB);

for (Map.Entry<String, String> entry : propertiesMB.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesMB.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutMB.getPlid(), "71_INSTANCE_vRgh12ulcIbj",
	portletPreferencesMB);

//Collaboration page link to blog page.

UnicodeProperties typeSettingsPropertiesCollaboration =
	collaborationLayout.getTypeSettingsProperties();

typeSettingsPropertiesCollaboration.setProperty(
	"groupId", String.valueOf(groupId));
typeSettingsPropertiesCollaboration.setProperty(
	"show-alternate-links", "true");
typeSettingsPropertiesCollaboration.setProperty(
"sitemap-changefreq", "daily");
typeSettingsPropertiesCollaboration.setProperty(
	"linkToLayoutId", String.valueOf(layoutBlogs.getLayoutId()));
typeSettingsPropertiesCollaboration.setProperty("sitemap-include", "1");
typeSettingsPropertiesCollaboration.setProperty(
	"layout-template-id", "2_columns_ii");

collaborationLayout.setTypeSettingsProperties(
	typeSettingsPropertiesCollaboration);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, collaborationlayoutId,
	collaborationLayout.getTypeSettings());

// Community Part

Map<Locale, String> nameMapCommunity = new HashMap<Locale, String>();

nameMapCommunity.put(Locale.US, "Community");

Map<Locale, String> titleMapCommunity = new HashMap<Locale, String>();

titleMapCommunity.put(Locale.US, "");

Map<Locale, String> descriptionMapCommunity = new HashMap<Locale, String>();

descriptionMapCommunity.put(Locale.US, "");

Map<Locale, String> keywordsMapCommunity = new HashMap<Locale, String>();

keywordsMapCommunity.put(Locale.US, "");

Map<Locale, String> robotsMapCommunity = new HashMap<Locale, String>();

robotsMapCommunity.put(Locale.US, "");

friendlyURLMapCommunity = "/community";

Layout communityLayout = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, 0, nameMapCommunity, titleMapCommunity,
	descriptionMapCommunity, keywordsMapCommunity, robotsMapCommunity,
	"link_to_layout", false, friendlyURLMapCommunity, serviceContext);

communityLayoutId = communityLayout.getLayoutId();

Map<Locale, String> nameMapBookmark = new HashMap<Locale, String>();

nameMapBookmark.put(Locale.US, "Bookmarks");

Map<Locale, String> titleMapBookmark = new HashMap<Locale, String>();

titleMapBookmark.put(Locale.US, "");

Map<Locale, String> descriptionMapBookmark = new HashMap<Locale, String>();

descriptionMapBookmark.put(Locale.US, "");

Map<Locale, String> keywordsMapBookmark = new HashMap<Locale, String>();

keywordsMapBookmark.put(Locale.US, "");

Map<Locale, String> robotsMapBookmark = new HashMap<Locale, String>();

robotsMapBookmark.put(Locale.US, "");

friendlyURLMapBookmark = "/bookmarks";

Layout bookmarksLayout = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, communityLayoutId, nameMapBookmark,
	titleMapBookmark, descriptionMapBookmark, keywordsMapBookmark,
	robotsMapBookmark, "portlet", false, friendlyURLMapBookmark,
	serviceContext);

UnicodeProperties typeSettingsPropertiesBookmark =
	bookmarksLayout.getTypeSettingsProperties();

typeSettingsPropertiesBookmark.setProperty(
	"layout-template-id", "2_columns_ii");
typeSettingsPropertiesBookmark.setProperty("column-2", "28");
typeSettingsPropertiesBookmark.setProperty(
	"column-1", "71_INSTANCE_7VL6SLQvAQyJ,");

bookmarksLayout.setTypeSettingsProperties(typeSettingsPropertiesBookmark);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, bookmarksLayout.getLayoutId(),
	bookmarksLayout.getTypeSettings());

UnicodeProperties propertiesBookmark = new UnicodeProperties();

propertiesBookmark.setProperty("displayStyle", "from-level-0");
propertiesBookmark.setProperty("headerType", "root-layout");
propertiesBookmark.setProperty("bulletStyle", "dots");
propertiesBookmark.setProperty("rootLayoutType", "absolute");
propertiesBookmark.setProperty("includedLayouts", "auto");
propertiesBookmark.setProperty("nestedChildren", "1");
propertiesBookmark.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute(
	"portletResourceBookmark", "71_INSTANCE_7VL6SLQvAQyJ");

portletResourceBookmark = (String)actionRequest.getAttribute(
	"portletResourceBookmark");

PortletPreferences portletPreferencesBookmark =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceBookmark);

for (Map.Entry<String, String> entry : propertiesBookmark.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesBookmark.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, bookmarksLayout.getPlid(), "71_INSTANCE_7VL6SLQvAQyJ",
	portletPreferencesBookmark);

Map<Locale, String> nameMapFriends = new HashMap<Locale, String>();

nameMapFriends.put(Locale.US, "Friends Directory");

Map<Locale, String> titleMapFriends = new HashMap<Locale, String>();

titleMapFriends.put(Locale.US, "");

Map<Locale, String> descriptionMapFriends = new HashMap<Locale, String>();

descriptionMapFriends.put(Locale.US, "");

Map<Locale, String> keywordsMapFriends = new HashMap<Locale, String>();

keywordsMapFriends.put(Locale.US, "");

Map<Locale, String> robotsMapFriends = new HashMap<Locale, String>();

robotsMapFriends.put(Locale.US, "");

friendlyURLMapFriends = "/friends-directory";

Layout layoutFriends = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, communityLayoutId, nameMapFriends,
	titleMapFriends, descriptionMapFriends, keywordsMapFriends,
	robotsMapFriends, "portlet", false, friendlyURLMapFriends,
	serviceContext);

UnicodeProperties typeSettingsPropertiesFriends =
	layoutFriends.getTypeSettingsProperties();

typeSettingsPropertiesFriends.setProperty(
	"layout-template-id", "2_columns_ii");
typeSettingsPropertiesFriends.setProperty("column-2", "11");
typeSettingsPropertiesFriends.setProperty(
	"column-1", "71_INSTANCE_HwcVOI17WGQx,");

layoutFriends.setTypeSettingsProperties(typeSettingsPropertiesFriends);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutFriends.getLayoutId(),
	layoutFriends.getTypeSettings());

UnicodeProperties propertiesFriends = new UnicodeProperties();

propertiesFriends.setProperty("displayStyle", "from-level-0");
propertiesFriends.setProperty("headerType", "root-layout");
propertiesFriends.setProperty("bulletStyle", "dots");
propertiesFriends.setProperty("rootLayoutType", "absolute");
propertiesFriends.setProperty("includedLayouts", "auto");
propertiesFriends.setProperty("nestedChildren", "1");
propertiesFriends.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute(
	"portletResourceFriends", "71_INSTANCE_HwcVOI17WGQx");

portletResourceFriends = (String)actionRequest.getAttribute(
	"portletResourceFriends");

PortletPreferences portletPreferencesFriends =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceFriends);

for (Map.Entry<String, String> entry : propertiesFriends.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesFriends.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutFriends.getPlid(), "71_INSTANCE_HwcVOI17WGQx",
	portletPreferencesFriends);

Map<Locale, String> nameMapInvitation = new HashMap<Locale, String>();

nameMapInvitation.put(Locale.US, "Invitation");

Map<Locale, String> titleMapInvitation = new HashMap<Locale, String>();

titleMapInvitation.put(Locale.US, "");

Map<Locale, String> descriptionMapInvitation = new HashMap<Locale, String>();

descriptionMapInvitation.put(Locale.US, "");

Map<Locale, String> keywordsMapInvitation = new HashMap<Locale, String>();

keywordsMapInvitation.put(Locale.US, "");

Map<Locale, String> robotsMapInvitation = new HashMap<Locale, String>();

robotsMapInvitation.put(Locale.US, "");

friendlyURLMapInvitation = "/invitation";

Layout layoutInvitation = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, communityLayoutId, nameMapInvitation,
	titleMapInvitation, descriptionMapInvitation, keywordsMapInvitation,
	robotsMapInvitation, "portlet", false, friendlyURLMapInvitation,
	serviceContext);

UnicodeProperties typeSettingsPropertiesInvitation =
	layoutInvitation.getTypeSettingsProperties();

typeSettingsPropertiesInvitation.setProperty(
	"layout-template-id", "2_columns_ii");
typeSettingsPropertiesInvitation.setProperty("column-2", "100");
typeSettingsPropertiesInvitation.setProperty(
	"column-1", "71_INSTANCE_HwcVOI17WGQm,");

layoutInvitation.setTypeSettingsProperties(typeSettingsPropertiesInvitation);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutInvitation.getLayoutId(),
	layoutInvitation.getTypeSettings());

UnicodeProperties propertiesInvitation = new UnicodeProperties();

propertiesInvitation.setProperty("displayStyle", "from-level-0");
propertiesInvitation.setProperty("headerType", "root-layout");
propertiesInvitation.setProperty("bulletStyle", "dots");
propertiesInvitation.setProperty("rootLayoutType", "absolute");
propertiesInvitation.setProperty("includedLayouts", "auto");
propertiesInvitation.setProperty("nestedChildren", "1");
propertiesInvitation.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute(
	"portletResourceInvitation", "71_INSTANCE_HwcVOI17WGQm");

portletResourceInvitation = (String)actionRequest.getAttribute(
	"portletResourceInvitation");

PortletPreferences portletPreferencesInvitation =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceInvitation);

for (Map.Entry<String, String> entry : propertiesInvitation.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesInvitation.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutInvitation.getPlid(), "71_INSTANCE_HwcVOI17WGQm",
	portletPreferencesInvitation);

Map<Locale, String> nameMapSite = new HashMap<Locale, String>();

nameMapSite.put(Locale.US, "My Site");

Map<Locale, String> titleMapSite = new HashMap<Locale, String>();

titleMapSite.put(Locale.US, "");

Map<Locale, String> descriptionMapSite = new HashMap<Locale, String>();

descriptionMapSite.put(Locale.US, "");

Map<Locale, String> keywordsMapSite = new HashMap<Locale, String>();

keywordsMapSite.put(Locale.US, "");

Map<Locale, String> robotsMapSite = new HashMap<Locale, String>();

robotsMapSite.put(Locale.US, "");

friendlyURLMapSite = "/my-site";

Layout layoutSite = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, communityLayoutId, nameMapSite, titleMapSite,
	descriptionMapSite, keywordsMapSite, robotsMapSite, "portlet", false,
	friendlyURLMapSite, serviceContext);

UnicodeProperties typeSettingsPropertiesSite =
	layoutSite.getTypeSettingsProperties();

typeSettingsPropertiesSite.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesSite.setProperty("column-2", "29");
typeSettingsPropertiesSite.setProperty(
	"column-1", "71_INSTANCE_JfIkBcsg8840,");

layoutSite.setTypeSettingsProperties(typeSettingsPropertiesSite);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutSite.getLayoutId(),
	layoutSite.getTypeSettings());

UnicodeProperties propertiesSite = new UnicodeProperties();

propertiesSite.setProperty("displayStyle", "from-level-0");
propertiesSite.setProperty("headerType", "root-layout");
propertiesSite.setProperty("bulletStyle", "dots");
propertiesSite.setProperty("rootLayoutType", "absolute");
propertiesSite.setProperty("includedLayouts", "auto");
propertiesSite.setProperty("nestedChildren", "1");
propertiesSite.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceSite", "71_INSTANCE_JfIkBcsg8840");

portletResourceSite = (String)actionRequest.getAttribute(
	"portletResourceSite");

PortletPreferences portletPreferencesSite =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceSite);

for (Map.Entry<String, String> entry : propertiesSite.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesSite.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutSite.getPlid(), "71_INSTANCE_JfIkBcsg8840",
	portletPreferencesSite);

Map<Locale, String> nameMapComment = new HashMap<Locale, String>();

nameMapComment.put(Locale.US, "Page Comments");

Map<Locale, String> titleMapComment = new HashMap<Locale, String>();

titleMapComment.put(Locale.US, "");

Map<Locale, String> descriptionMapComment = new HashMap<Locale, String>();

descriptionMapComment.put(Locale.US, "");

Map<Locale, String> keywordsMapComment = new HashMap<Locale, String>();

keywordsMapComment.put(Locale.US, "");

Map<Locale, String> robotsMapComment = new HashMap<Locale, String>();

robotsMapComment.put(Locale.US, "");

friendlyURLMapComment = "/page-comments";

Layout layoutComment = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, communityLayoutId, nameMapComment,
	titleMapComment, descriptionMapComment, keywordsMapComment,
	robotsMapComment, "portlet", false, friendlyURLMapComment,
	serviceContext);

UnicodeProperties typeSettingsPropertiesComment =
	layoutComment.getTypeSettingsProperties();

typeSettingsPropertiesComment.setProperty(
	"layout-template-id", "2_columns_ii");
typeSettingsPropertiesComment.setProperty("column-2", "108,107,143");
typeSettingsPropertiesComment.setProperty("column-1", "71_INSTANCE_mK2L1tZReQ4h,");

layoutComment.setTypeSettingsProperties(typeSettingsPropertiesComment);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutComment.getLayoutId(),
	layoutComment.getTypeSettings());

UnicodeProperties propertiesComment = new UnicodeProperties();

propertiesComment.setProperty("displayStyle", "from-level-0");
propertiesComment.setProperty("headerType", "root-layout");
propertiesComment.setProperty("bulletStyle", "dots");
propertiesComment.setProperty("rootLayoutType", "absolute");
propertiesComment.setProperty("includedLayouts", "auto");
propertiesComment.setProperty("nestedChildren", "1");
propertiesComment.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute(
	"portletResourceComment", "71_INSTANCE_mK2L1tZReQ4h");

portletResourceComment = (String)actionRequest.getAttribute(
	"portletResourceComment");

PortletPreferences portletPreferencesComment =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceComment);

for (Map.Entry<String, String> entry : propertiesComment.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesComment.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutComment.getPlid(), "71_INSTANCE_mK2L1tZReQ4h",
	portletPreferencesComment);

//Community page link to Bookmarks page.

UnicodeProperties typeSettingsPropertiescommunity =
	communityLayout.getTypeSettingsProperties();

typeSettingsPropertiescommunity.setProperty(
	"groupId", String.valueOf(groupId));
typeSettingsPropertiescommunity.setProperty("show-alternate-links", "true");
typeSettingsPropertiescommunity.setProperty("sitemap-changefreq", "daily");
typeSettingsPropertiescommunity.setProperty(
	"linkToLayoutId", String.valueOf(bookmarksLayout.getLayoutId()));
typeSettingsPropertiescommunity.setProperty("sitemap-include", "1");
typeSettingsPropertiescommunity.setProperty(
	"layout-template-id", "2_columns_ii");

communityLayout.setTypeSettingsProperties(typeSettingsPropertiescommunity);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, communityLayoutId,
	communityLayout.getTypeSettings());

//Content Management

Map<Locale, String> nameMapContentMan = new HashMap<Locale, String>();

nameMapContentMan.put(Locale.US, "Content Management");

Map<Locale, String> titleMapContentMan = new HashMap<Locale, String>();

titleMapContentMan.put(Locale.US, "");

Map<Locale, String> descriptionMapContentMan = new HashMap<Locale, String>();

descriptionMapContentMan.put(Locale.US, "");

Map<Locale, String> keywordsMapContentMan = new HashMap<Locale, String>();

keywordsMapContentMan.put(Locale.US, "");

Map<Locale, String> robotsMapContentMan = new HashMap<Locale, String>();

robotsMapContentMan.put(Locale.US, "");

friendlyURLMapContentMan = "/content-management";

Layout contentManLayout = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, 0, nameMapContentMan, titleMapContentMan,
	descriptionMapContentMan, keywordsMapContentMan, robotsMapContentMan,
	"link_to_layout", false, friendlyURLMapContentMan, serviceContext);

contentManLayoutId = contentManLayout.getLayoutId();

Map<Locale, String> nameMapAssetP = new HashMap<Locale, String>();

nameMapAssetP.put(Locale.US, "Asset Publisher");

Map<Locale, String> titleMapAssetP = new HashMap<Locale, String>();

titleMapAssetP.put(Locale.US, "");

Map<Locale, String> descriptionMapAssetP = new HashMap<Locale, String>();

descriptionMapAssetP.put(Locale.US, "");

Map<Locale, String> keywordsMapAssetP = new HashMap<Locale, String>();

keywordsMapAssetP.put(Locale.US, "");

Map<Locale, String> robotsMapAssetP = new HashMap<Locale, String>();

robotsMapAssetP.put(Locale.US, "");

friendlyURLMapAssetP = "/asset-publisher";

Layout layoutAssetP = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, contentManLayoutId, nameMapAssetP,
	titleMapAssetP, descriptionMapAssetP, keywordsMapAssetP,
	robotsMapAssetP, "portlet", false, friendlyURLMapAssetP,
	serviceContext);

UnicodeProperties typeSettingsPropertiesAssetP =
	layoutAssetP.getTypeSettingsProperties();

typeSettingsPropertiesAssetP.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesAssetP.setProperty(
	"column-2", "101_INSTANCE_cHzGSpUq98kH");
typeSettingsPropertiesAssetP.setProperty(
	"column-1", "71_INSTANCE_kUWGUtU6zEnt,");

layoutAssetP.setTypeSettingsProperties(typeSettingsPropertiesAssetP);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutAssetP.getLayoutId(),
	layoutAssetP.getTypeSettings());

UnicodeProperties propertiesAssetP = new UnicodeProperties();

propertiesAssetP.setProperty("displayStyle", "from-level-0");
propertiesAssetP.setProperty("headerType", "root-layout");
propertiesAssetP.setProperty("bulletStyle", "dots");
propertiesAssetP.setProperty("rootLayoutType", "absolute");
propertiesAssetP.setProperty("includedLayouts", "auto");
propertiesAssetP.setProperty("nestedChildren", "1");
propertiesAssetP.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute(
	"portletResourceAssetP", "71_INSTANCE_kUWGUtU6zEnt");

portletResourceAssetP = (String)actionRequest.getAttribute(
	"portletResourceAssetP");

PortletPreferences portletPreferencesAssetP =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceAssetP);

for (Map.Entry<String, String> entry : propertiesAssetP.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesAssetP.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutAssetP.getPlid(), "71_INSTANCE_kUWGUtU6zEnt",
	portletPreferencesAssetP);

Map<Locale, String> nameMapBreadcrumb = new HashMap<Locale, String>();

nameMapBreadcrumb.put(Locale.US, "Breadcrumb");

Map<Locale, String> titleMapBreadcrumb = new HashMap<Locale, String>();

titleMapBreadcrumb.put(Locale.US, "");

Map<Locale, String> descriptionMapBreadcrumb = new HashMap<Locale, String>();

descriptionMapBreadcrumb.put(Locale.US, "");

Map<Locale, String> keywordsMapBreadcrumb = new HashMap<Locale, String>();

keywordsMapBreadcrumb.put(Locale.US, "");

Map<Locale, String> robotsMapBreadcrumb = new HashMap<Locale, String>();

robotsMapBreadcrumb.put(Locale.US, "");

friendlyURLMapBreadcrumb = "/breadcrumb";

Layout layoutBreadcrumb = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, contentManLayoutId, nameMapBreadcrumb,
	titleMapBreadcrumb, descriptionMapBreadcrumb, keywordsMapBreadcrumb,
	robotsMapBreadcrumb, "portlet", false, friendlyURLMapBreadcrumb,
	serviceContext);

UnicodeProperties typeSettingsPropertiesBreadcrumb =
	layoutBreadcrumb.getTypeSettingsProperties();

typeSettingsPropertiesBreadcrumb.setProperty(
	"layout-template-id", "2_columns_ii");
typeSettingsPropertiesBreadcrumb.setProperty(
	"column-2", "73_INSTANCE_bOhQtaG2uIry");
typeSettingsPropertiesBreadcrumb.setProperty(
	"column-1", "71_INSTANCE_6Oy6CHmEnaPW,");

layoutBreadcrumb.setTypeSettingsProperties(typeSettingsPropertiesBreadcrumb);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutBreadcrumb.getLayoutId(),
	layoutBreadcrumb.getTypeSettings());

UnicodeProperties propertiesBreadcrumb = new UnicodeProperties();

propertiesBreadcrumb.setProperty("displayStyle", "from-level-0");
propertiesBreadcrumb.setProperty("headerType", "root-layout");
propertiesBreadcrumb.setProperty("bulletStyle", "dots");
propertiesBreadcrumb.setProperty("rootLayoutType", "absolute");
propertiesBreadcrumb.setProperty("includedLayouts", "auto");
propertiesBreadcrumb.setProperty("nestedChildren", "1");
propertiesBreadcrumb.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute(
	"portletResourceBreadcrumb", "71_INSTANCE_6Oy6CHmEnaPW");

portletResourceBreadcrumb = (String)actionRequest.getAttribute(
	"portletResourceBreadcrumb");

PortletPreferences portletPreferencesBreadcrumb =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceBreadcrumb);

for (Map.Entry<String, String> entry : propertiesBreadcrumb.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesBreadcrumb.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutBreadcrumb.getPlid(), "71_INSTANCE_6Oy6CHmEnaPW",
	portletPreferencesBreadcrumb);

Map<Locale, String> nameMapCN = new HashMap<Locale, String>();

nameMapCN.put(Locale.US, "Category Navigation");

Map<Locale, String> titleMapCN = new HashMap<Locale, String>();

titleMapCN.put(Locale.US, "");

Map<Locale, String> descriptionMapCN = new HashMap<Locale, String>();

descriptionMapCN.put(Locale.US, "");

Map<Locale, String> keywordsMapCN = new HashMap<Locale, String>();

keywordsMapCN.put(Locale.US, "");

Map<Locale, String> robotsMapCN = new HashMap<Locale, String>();

robotsMapCN.put(Locale.US, "");

friendlyURLMapCN = "/category-navigation";

Layout layoutCN = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, contentManLayoutId, nameMapCN, titleMapCN,
	descriptionMapCN, keywordsMapCN, robotsMapCN, "portlet", false,
	friendlyURLMapCN, serviceContext);

UnicodeProperties typeSettingsPropertiesCN =
	layoutCN.getTypeSettingsProperties();

typeSettingsPropertiesCN.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesCN.setProperty("column-2", "122_INSTANCE_wK4hm8kPKiq2");
typeSettingsPropertiesCN.setProperty("column-1", "71_INSTANCE_eyemFjZqJ1Kk,");

layoutCN.setTypeSettingsProperties(typeSettingsPropertiesCN);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutCN.getLayoutId(),
	layoutCN.getTypeSettings());

UnicodeProperties propertiesCN = new UnicodeProperties();

propertiesCN.setProperty("displayStyle", "from-level-0");
propertiesCN.setProperty("headerType", "root-layout");
propertiesCN.setProperty("bulletStyle", "dots");
propertiesCN.setProperty("rootLayoutType", "absolute");
propertiesCN.setProperty("includedLayouts", "auto");
propertiesCN.setProperty("nestedChildren", "1");
propertiesCN.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceCN", "71_INSTANCE_eyemFjZqJ1Kk");

portletResourceCN = (String)actionRequest.getAttribute("portletResourceCN");

PortletPreferences portletPreferencesCN =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceCN);

for (Map.Entry<String, String> entry : propertiesCN.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesCN.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutCN.getPlid(), "71_INSTANCE_eyemFjZqJ1Kk",
	portletPreferencesCN);

Map<Locale, String> nameMapDM = new HashMap<Locale, String>();

nameMapDM.put(Locale.US, "Documents and Media");

Map<Locale, String> titleMapDM = new HashMap<Locale, String>();

titleMapDM.put(Locale.US, "");

Map<Locale, String> descriptionMapDM = new HashMap<Locale, String>();

descriptionMapDM.put(Locale.US, "");

Map<Locale, String> keywordsMapDM = new HashMap<Locale, String>();

keywordsMapDM.put(Locale.US, "");

Map<Locale, String> robotsMapDM = new HashMap<Locale, String>();

robotsMapDM.put(Locale.US, "");

friendlyURLMapDM = "/documents-and-media";

Layout layoutDM = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, contentManLayoutId, nameMapDM, titleMapDM,
	descriptionMapDM, keywordsMapDM, robotsMapDM, "portlet", false,
	friendlyURLMapDM, serviceContext);

UnicodeProperties typeSettingsPropertiesDM =
	layoutDM.getTypeSettingsProperties();

typeSettingsPropertiesDM.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesDM.setProperty("column-2", "20");
typeSettingsPropertiesDM.setProperty("column-1", "71_INSTANCE_rXmUME1go3zw");

layoutDM.setTypeSettingsProperties(typeSettingsPropertiesDM);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutDM.getLayoutId(),
	layoutDM.getTypeSettings());

UnicodeProperties propertiesDM = new UnicodeProperties();

propertiesDM.setProperty("displayStyle", "from-level-0");
propertiesDM.setProperty("headerType", "root-layout");
propertiesDM.setProperty("bulletStyle", "dots");
propertiesDM.setProperty("rootLayoutType", "absolute");
propertiesDM.setProperty("includedLayouts", "auto");
propertiesDM.setProperty("nestedChildren", "1");
propertiesDM.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceDM", "71_INSTANCE_rXmUME1go3zw");

portletResourceDM = (String)actionRequest.getAttribute("portletResourceDM");

PortletPreferences portletPreferencesDM =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceDM);

for (Map.Entry<String, String> entry : propertiesDM.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesDM.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutDM.getPlid(), "71_INSTANCE_rXmUME1go3zw",
	portletPreferencesDM);

Map<Locale, String> nameMapNested = new HashMap<Locale, String>();

nameMapNested.put(Locale.US, "Nested Portlets");

Map<Locale, String> titleMapNested = new HashMap<Locale, String>();

titleMapNested.put(Locale.US, "");

Map<Locale, String> descriptionMapNested = new HashMap<Locale, String>();

descriptionMapNested.put(Locale.US, "");

Map<Locale, String> keywordsMapNested = new HashMap<Locale, String>();

keywordsMapNested.put(Locale.US, "");

Map<Locale, String> robotsMapNested = new HashMap<Locale, String>();

robotsMapNested.put(Locale.US, "");

friendlyURLMapNested = "/nested-portlets";

Layout layoutNested = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, contentManLayoutId, nameMapNested, titleMapNested,
	descriptionMapNested, keywordsMapNested, robotsMapNested, "portlet", false,
	friendlyURLMapNested, serviceContext);

UnicodeProperties typeSettingsPropertiesNested =
	layoutNested.getTypeSettingsProperties();

typeSettingsPropertiesNested.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesNested.setProperty(
	"_118_INSTANCE_mQnir2HWDHrM__column-3", "115");
typeSettingsPropertiesNested.setProperty(
	"_118_INSTANCE_mQnir2HWDHrM__column-2", "71_INSTANCE_u9La1oksuZYZ,");
typeSettingsPropertiesNested.setProperty(
	"_118_INSTANCE_mQnir2HWDHrM__column-1", "73_INSTANCE_TtL6I5irPv5t,");
typeSettingsPropertiesNested.setProperty(
	"nested-column-ids",
	"118_INSTANCE_mQnir2HWDHrM__column-1,_118_INSTANCE_mQnir2HWDHrM__column-2,_118_INSTANCE_mQnir2HWDHrM__column-3,");
typeSettingsPropertiesNested.setProperty("column-2", "118_INSTANCE_mQnir2HWDHrM,");
typeSettingsPropertiesNested.setProperty("column-1", "71_INSTANCE_rXmUME1go3zm,");

layoutNested.setTypeSettingsProperties(typeSettingsPropertiesNested);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutNested.getLayoutId(),
	layoutNested.getTypeSettings());

UnicodeProperties propertiesNested = new UnicodeProperties();

propertiesNested.setProperty("displayStyle", "from-level-0");
propertiesNested.setProperty("headerType", "root-layout");
propertiesNested.setProperty("bulletStyle", "dots");
propertiesNested.setProperty("rootLayoutType", "absolute");
propertiesNested.setProperty("includedLayouts", "auto");
propertiesNested.setProperty("nestedChildren", "1");
propertiesNested.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceNested", "71_INSTANCE_rXmUME1go3zm");

portletResourceNested = (String)actionRequest.getAttribute(
	"portletResourceNested");

PortletPreferences portletPreferencesNested =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceNested);

for (Map.Entry<String, String> entry : propertiesNested.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesNested.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutNested.getPlid(), "71_INSTANCE_rXmUME1go3zm",
	portletPreferencesNested);

Map<Locale, String> nameMapPolls = new HashMap<Locale, String>();

nameMapPolls.put(Locale.US, "Polls Display");

Map<Locale, String> titleMapPolls = new HashMap<Locale, String>();

titleMapPolls.put(Locale.US, "");

Map<Locale, String> descriptionMapPolls = new HashMap<Locale, String>();

descriptionMapPolls.put(Locale.US, "");

Map<Locale, String> keywordsMapPolls = new HashMap<Locale, String>();

keywordsMapPolls.put(Locale.US, "");

Map<Locale, String> robotsMapPolls = new HashMap<Locale, String>();

robotsMapPolls.put(Locale.US, "");

friendlyURLMapPolls = "/polls-display";

Layout layoutPolls = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, contentManLayoutId, nameMapPolls,
	titleMapPolls, descriptionMapPolls, keywordsMapPolls, robotsMapPolls,
	"portlet", false, friendlyURLMapPolls, serviceContext);

UnicodeProperties typeSettingsPropertiesPolls =
	layoutPolls.getTypeSettingsProperties();

typeSettingsPropertiesPolls.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesPolls.setProperty("column-2", "59_INSTANCE_TbzT9KKPaRFZ");
typeSettingsPropertiesPolls.setProperty("column-1", "71_INSTANCE_FkVY7cJ3m6cm,");

layoutPolls.setTypeSettingsProperties(typeSettingsPropertiesPolls);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutPolls.getLayoutId(),
	layoutPolls.getTypeSettings());

UnicodeProperties propertiesPolls = new UnicodeProperties();

propertiesPolls.setProperty("displayStyle", "from-level-0");
propertiesPolls.setProperty("headerType", "root-layout");
propertiesPolls.setProperty("bulletStyle", "dots");
propertiesPolls.setProperty("rootLayoutType", "absolute");
propertiesPolls.setProperty("includedLayouts", "auto");
propertiesPolls.setProperty("nestedChildren", "1");
propertiesPolls.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourcePolls", "71_INSTANCE_FkVY7cJ3m6cm");

portletResourcePolls = (String)actionRequest.getAttribute(
	"portletResourcePolls");

PortletPreferences portletPreferencesPolls =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourcePolls);

for (Map.Entry<String, String> entry : propertiesPolls.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesPolls.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutPolls.getPlid(), "71_INSTANCE_FkVY7cJ3m6cm",
	portletPreferencesPolls);

Map<Locale, String> nameMapRD = new HashMap<Locale, String>();

nameMapRD.put(Locale.US, "Recent Downloads");

Map<Locale, String> titleMapRD = new HashMap<Locale, String>();

titleMapRD.put(Locale.US, "");

Map<Locale, String> descriptionMapRD = new HashMap<Locale, String>();

descriptionMapRD.put(Locale.US, "");

Map<Locale, String> keywordsMapRD = new HashMap<Locale, String>();

keywordsMapRD.put(Locale.US, "");

Map<Locale, String> robotsMapRD = new HashMap<Locale, String>();

robotsMapRD.put(Locale.US, "");

friendlyURLMapRD = "/recent-downloads";

Layout layoutRD = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, contentManLayoutId, nameMapRD, titleMapRD,
	descriptionMapRD, keywordsMapRD, robotsMapRD, "portlet", false,
	friendlyURLMapRD, serviceContext);

UnicodeProperties typeSettingsPropertiesRD =
	layoutRD.getTypeSettingsProperties();

typeSettingsPropertiesRD.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesRD.setProperty("column-2", "64");
typeSettingsPropertiesRD.setProperty("column-1", "71_INSTANCE_yDtUc5UAAhWm,");

layoutRD.setTypeSettingsProperties(typeSettingsPropertiesRD);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutRD.getLayoutId(),
	layoutRD.getTypeSettings());

UnicodeProperties propertiesRD = new UnicodeProperties();

propertiesRD.setProperty("displayStyle", "from-level-0");
propertiesRD.setProperty("headerType", "root-layout");
propertiesRD.setProperty("bulletStyle", "dots");
propertiesRD.setProperty("rootLayoutType", "absolute");
propertiesRD.setProperty("includedLayouts", "auto");
propertiesRD.setProperty("nestedChildren", "1");
propertiesRD.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceRD", "71_INSTANCE_yDtUc5UAAhWm");

portletResourceRD = (String)actionRequest.getAttribute("portletResourceRD");

PortletPreferences portletPreferencesRD =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceRD);

for (Map.Entry<String, String> entry : propertiesRD.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesRD.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutRD.getPlid(), "71_INSTANCE_yDtUc5UAAhWm",
	portletPreferencesRD);

Map<Locale, String> nameMapRA = new HashMap<Locale, String>();

nameMapRA.put(Locale.US, "Related Assets");

Map<Locale, String> titleMapRA = new HashMap<Locale, String>();

titleMapRA.put(Locale.US, "");

Map<Locale, String> descriptionMapRA = new HashMap<Locale, String>();

descriptionMapRA.put(Locale.US, "");

Map<Locale, String> keywordsMapRA = new HashMap<Locale, String>();

keywordsMapRA.put(Locale.US, "");

Map<Locale, String> robotsMapRA = new HashMap<Locale, String>();

robotsMapRA.put(Locale.US, "");

friendlyURLMapRA = "/related-assets";

Layout layoutRA = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, contentManLayoutId, nameMapRA, titleMapRA,
	descriptionMapRA, keywordsMapRA, robotsMapRA, "portlet", false,
	friendlyURLMapRA, serviceContext);

UnicodeProperties typeSettingsPropertiesRA =
	layoutRA.getTypeSettingsProperties();

typeSettingsPropertiesRA.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesRA.setProperty(
	"column-2", "175_INSTANCE_s90usYdR23Ii,");
typeSettingsPropertiesRA.setProperty("column-1", "71_INSTANCE_yDtUc5UAAhW4,");

layoutRA.setTypeSettingsProperties(typeSettingsPropertiesRA);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutRA.getLayoutId(),
	layoutRA.getTypeSettings());

UnicodeProperties propertiesRA = new UnicodeProperties();

propertiesRA.setProperty("displayStyle", "from-level-0");
propertiesRA.setProperty("headerType", "root-layout");
propertiesRA.setProperty("bulletStyle", "dots");
propertiesRA.setProperty("rootLayoutType", "absolute");
propertiesRA.setProperty("includedLayouts", "auto");
propertiesRA.setProperty("nestedChildren", "1");
propertiesRA.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceRA", "71_INSTANCE_yDtUc5UAAhW4");

portletResourceRA = (String)actionRequest.getAttribute("portletResourceRA");

PortletPreferences portletPreferencesRA =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceRA);

for (Map.Entry<String, String> entry : propertiesRA.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesRA.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutRA.getPlid(), "71_INSTANCE_yDtUc5UAAhW4",
	portletPreferencesRA);

Map<Locale, String> nameMapSiteMap = new HashMap<Locale, String>();

nameMapSiteMap.put(Locale.US, "Site Map");

Map<Locale, String> titleMapSiteMap = new HashMap<Locale, String>();

titleMapSiteMap.put(Locale.US, "");

Map<Locale, String> descriptionMapSiteMap = new HashMap<Locale, String>();

descriptionMapSiteMap.put(Locale.US, "");

Map<Locale, String> keywordsMapSiteMap = new HashMap<Locale, String>();

keywordsMapSiteMap.put(Locale.US, "");

Map<Locale, String> robotsMapSiteMap = new HashMap<Locale, String>();

robotsMapSiteMap.put(Locale.US, "");

friendlyURLMapSiteMap = "/site-map";

Layout layoutSiteMap = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, contentManLayoutId, nameMapSiteMap,
	titleMapSiteMap, descriptionMapSiteMap, keywordsMapSiteMap,
	robotsMapSiteMap, "portlet", false, friendlyURLMapSiteMap,
	serviceContext);

UnicodeProperties typeSettingsPropertiesSiteMap =
	layoutSiteMap.getTypeSettingsProperties();

typeSettingsPropertiesSiteMap.setProperty(
	"layout-template-id", "2_columns_ii");
typeSettingsPropertiesSiteMap.setProperty(
	"column-2", "85_INSTANCE_8ynIjUSaM1Xf");
typeSettingsPropertiesSiteMap.setProperty(
	"column-1", "71_INSTANCE_YnegvD2AETDa,");

layoutSiteMap.setTypeSettingsProperties(typeSettingsPropertiesSiteMap);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutSiteMap.getLayoutId(),
	layoutSiteMap.getTypeSettings());

UnicodeProperties propertiesSiteMap = new UnicodeProperties();

propertiesSiteMap.setProperty("displayStyle", "from-level-0");
propertiesSiteMap.setProperty("headerType", "root-layout");
propertiesSiteMap.setProperty("bulletStyle", "dots");
propertiesSiteMap.setProperty("rootLayoutType", "absolute");
propertiesSiteMap.setProperty("includedLayouts", "auto");
propertiesSiteMap.setProperty("nestedChildren", "1");
propertiesSiteMap.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute(
	"portletResourceSiteMap", "71_INSTANCE_YnegvD2AETDa");

portletResourceSiteMap = (String)actionRequest.getAttribute(
	"portletResourceSiteMap");

PortletPreferences portletPreferencesSiteMap =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceSiteMap);

for (Map.Entry<String, String> entry : propertiesSiteMap.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesSiteMap.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutSiteMap.getPlid(), "71_INSTANCE_YnegvD2AETDa",
	portletPreferencesSiteMap);

Map<Locale, String> nameMapTag = new HashMap<Locale, String>();

nameMapTag.put(Locale.US, "Tag Cloud");

Map<Locale, String> titleMapTag = new HashMap<Locale, String>();

titleMapTag.put(Locale.US, "");

Map<Locale, String> descriptionMapTag = new HashMap<Locale, String>();

descriptionMapTag.put(Locale.US, "");

Map<Locale, String> keywordsMapTag = new HashMap<Locale, String>();

keywordsMapTag.put(Locale.US, "");

Map<Locale, String> robotsMapTag = new HashMap<Locale, String>();

robotsMapTag.put(Locale.US, "");

friendlyURLMapTag = "/tag-cloud";

Layout layoutTag = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, contentManLayoutId, nameMapTag, titleMapTag,
	descriptionMapTag, keywordsMapTag, robotsMapTag, "portlet", false,
	friendlyURLMapTag, serviceContext);

UnicodeProperties typeSettingsPropertiesTag =
	layoutTag.getTypeSettingsProperties();

typeSettingsPropertiesTag.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesTag.setProperty(
	"column-2", "141_INSTANCE_W3mu4VyEzpgz,148_INSTANCE_ovvJg184K1ix");
typeSettingsPropertiesTag.setProperty("column-1", "71_INSTANCE_LWB5t48iFqIP,");

layoutTag.setTypeSettingsProperties(typeSettingsPropertiesTag);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutTag.getLayoutId(),
	layoutTag.getTypeSettings());

UnicodeProperties propertiesTag = new UnicodeProperties();

propertiesTag.setProperty("displayStyle", "from-level-0");
propertiesTag.setProperty("headerType", "root-layout");
propertiesTag.setProperty("bulletStyle", "dots");
propertiesTag.setProperty("rootLayoutType", "absolute");
propertiesTag.setProperty("includedLayouts", "auto");
propertiesTag.setProperty("nestedChildren", "1");
propertiesTag.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceTag", "71_INSTANCE_LWB5t48iFqIP");

portletResourceTag = (String)actionRequest.getAttribute("portletResourceTag");

PortletPreferences portletPreferencesTag =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceTag);

for (Map.Entry<String, String> entry : propertiesTag.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesTag.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutTag.getPlid(), "71_INSTANCE_LWB5t48iFqIP",
	portletPreferencesTag);

Map<Locale, String> nameMapWC = new HashMap<Locale, String>();

nameMapWC.put(Locale.US, "Web Content");

Map<Locale, String> titleMapWC = new HashMap<Locale, String>();

titleMapWC.put(Locale.US, "");

Map<Locale, String> descriptionMapWC = new HashMap<Locale, String>();

descriptionMapWC.put(Locale.US, "");

Map<Locale, String> keywordsMapWC = new HashMap<Locale, String>();

keywordsMapWC.put(Locale.US, "");

Map<Locale, String> robotsMapWC = new HashMap<Locale, String>();

robotsMapWC.put(Locale.US, "");

friendlyURLMapWC = "/web-content";

Layout layoutWC = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, contentManLayoutId, nameMapWC, titleMapWC,
	descriptionMapWC, keywordsMapWC, robotsMapWC, "portlet", false,
	friendlyURLMapWC, serviceContext);

UnicodeProperties typeSettingsPropertiesWC =
	layoutWC.getTypeSettingsProperties();

typeSettingsPropertiesWC.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesWC.setProperty(
	"column-2", "77,56_INSTANCE_COxqya3VTLhr,62_INSTANCE_ffagnWrlaM2y");
typeSettingsPropertiesWC.setProperty("column-1", "71_INSTANCE_kcplKlFfMkj3,");

layoutWC.setTypeSettingsProperties(typeSettingsPropertiesWC);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutWC.getLayoutId(),
	layoutWC.getTypeSettings());

UnicodeProperties propertiesWC = new UnicodeProperties();

propertiesWC.setProperty("displayStyle", "from-level-0");
propertiesWC.setProperty("headerType", "root-layout");
propertiesWC.setProperty("bulletStyle", "dots");
propertiesWC.setProperty("rootLayoutType", "absolute");
propertiesWC.setProperty("includedLayouts", "auto");
propertiesWC.setProperty("nestedChildren", "1");
propertiesWC.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceWC", "71_INSTANCE_kcplKlFfMkj3");

portletResourceWC = (String)actionRequest.getAttribute("portletResourceWC");

PortletPreferences portletPreferencesWC =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceWC);

for (Map.Entry<String, String> entry : propertiesWC.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesWC.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutWC.getPlid(), "71_INSTANCE_kcplKlFfMkj3",
	portletPreferencesWC);

Map<Locale, String> nameMapXSL = new HashMap<Locale, String>();

nameMapXSL.put(Locale.US, "XSL Content");

Map<Locale, String> titleMapXSL = new HashMap<Locale, String>();

titleMapXSL.put(Locale.US, "");

Map<Locale, String> descriptionMapXSL = new HashMap<Locale, String>();

descriptionMapXSL.put(Locale.US, "");

Map<Locale, String> keywordsMapXSL = new HashMap<Locale, String>();

keywordsMapXSL.put(Locale.US, "");

Map<Locale, String> robotsMapXSL = new HashMap<Locale, String>();

robotsMapXSL.put(Locale.US, "");

friendlyURLMapXSL = "/xsl-content";

Layout layoutXSL = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, contentManLayoutId, nameMapXSL, titleMapXSL,
	descriptionMapXSL, keywordsMapXSL, robotsMapXSL, "portlet", false,
	friendlyURLMapXSL, serviceContext);

UnicodeProperties typeSettingsPropertiesXSL =
	layoutXSL.getTypeSettingsProperties();

typeSettingsPropertiesXSL.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesXSL.setProperty("column-2", "102_INSTANCE_4WS583Eepz19");
typeSettingsPropertiesXSL.setProperty("column-1", "71_INSTANCE_9sS3bcUNQ2ox,");

layoutXSL.setTypeSettingsProperties(typeSettingsPropertiesXSL);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutXSL.getLayoutId(),
	layoutXSL.getTypeSettings());

UnicodeProperties propertiesXSL = new UnicodeProperties();

propertiesXSL.setProperty("displayStyle", "from-level-0");
propertiesXSL.setProperty("headerType", "root-layout");
propertiesXSL.setProperty("bulletStyle", "dots");
propertiesXSL.setProperty("rootLayoutType", "absolute");
propertiesXSL.setProperty("includedLayouts", "auto");
propertiesXSL.setProperty("nestedChildren", "1");
propertiesXSL.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceXSL", "71_INSTANCE_9sS3bcUNQ2ox");

portletResourceXSL = (String)actionRequest.getAttribute("portletResourceXSL");

PortletPreferences portletPreferencesXSL =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceXSL);

for (Map.Entry<String, String> entry : propertiesXSL.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesXSL.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutXSL.getPlid(), "71_INSTANCE_9sS3bcUNQ2ox",
	portletPreferencesXSL);

//Content Management page link to Asset Publish page.

UnicodeProperties typeSettingsPropertiesContentMan =
	contentManLayout.getTypeSettingsProperties();

typeSettingsPropertiesContentMan.setProperty(
	"groupId", String.valueOf(groupId));
typeSettingsPropertiesContentMan.setProperty("show-alternate-links", "true");
typeSettingsPropertiesContentMan.setProperty("sitemap-changefreq", "daily");
typeSettingsPropertiesContentMan.setProperty(
	"linkToLayoutId", String.valueOf(layoutAssetP.getLayoutId()));
typeSettingsPropertiesContentMan.setProperty("sitemap-include", "1");
typeSettingsPropertiesContentMan.setProperty(
	"layout-template-id", "2_columns_ii");

contentManLayout.setTypeSettingsProperties(typeSettingsPropertiesContentMan);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, contentManLayoutId,
	contentManLayout.getTypeSettings());

//Finace Part

Map<Locale, String> nameMapFinance = new HashMap<Locale, String>();

nameMapFinance.put(Locale.US, "Finance");

Map<Locale, String> titleMapFinance = new HashMap<Locale, String>();

titleMapFinance.put(Locale.US, "");

Map<Locale, String> descriptionMapFinance = new HashMap<Locale, String>();

descriptionMapFinance.put(Locale.US, "");

Map<Locale, String> keywordsMapFinance = new HashMap<Locale, String>();

keywordsMapFinance.put(Locale.US, "");

Map<Locale, String> robotsMapFinance = new HashMap<Locale, String>();

robotsMapFinance.put(Locale.US, "");

friendlyURLMapFinance = "/finance";

Layout FinanceLayout = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, 0, nameMapFinance, titleMapFinance,
	descriptionMapFinance, keywordsMapFinance, robotsMapFinance,
	"link_to_layout", false, friendlyURLMapFinance, serviceContext);

financeLayoutId = FinanceLayout.getLayoutId();

Map<Locale, String> nameMapCC = new HashMap<Locale, String>();

nameMapCC.put(Locale.US, "Currency Converter");

Map<Locale, String> titleMapCC = new HashMap<Locale, String>();

titleMapCC.put(Locale.US, "");

Map<Locale, String> descriptionMapCC = new HashMap<Locale, String>();

descriptionMapCC.put(Locale.US, "");

Map<Locale, String> keywordsMapCC = new HashMap<Locale, String>();

keywordsMapCC.put(Locale.US, "");

Map<Locale, String> robotsMapCC = new HashMap<Locale, String>();

robotsMapCC.put(Locale.US, "");

friendlyURLMapCC = "/currency-converter";

Layout layoutCC = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, financeLayoutId, nameMapCC, titleMapCC,
	descriptionMapCC, keywordsMapCC, robotsMapCC, "portlet", false,
	friendlyURLMapCC, serviceContext);

UnicodeProperties typeSettingsPropertiesCC =
	layoutCC.getTypeSettingsProperties();

typeSettingsPropertiesCC.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesCC.setProperty("column-2", "16");
typeSettingsPropertiesCC.setProperty("column-1", "71_INSTANCE_ah14nyR4ghXD,");

layoutCC.setTypeSettingsProperties(typeSettingsPropertiesCC);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutCC.getLayoutId(),
	layoutCC.getTypeSettings());

UnicodeProperties propertiesCC = new UnicodeProperties();

propertiesCC.setProperty("displayStyle", "from-level-0");
propertiesCC.setProperty("headerType", "root-layout");
propertiesCC.setProperty("bulletStyle", "dots");
propertiesCC.setProperty("rootLayoutType", "absolute");
propertiesCC.setProperty("includedLayouts", "auto");
propertiesCC.setProperty("nestedChildren", "1");
propertiesCC.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceCC", "71_INSTANCE_ah14nyR4ghXD");

portletResourceCC = (String)actionRequest.getAttribute("portletResourceCC");

PortletPreferences portletPreferencesCC =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceCC);

for (Map.Entry<String, String> entry : propertiesCC.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesCC.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutCC.getPlid(), "71_INSTANCE_ah14nyR4ghXD",
	portletPreferencesCC);

Map<Locale, String> nameMapLC = new HashMap<Locale, String>();

nameMapLC.put(Locale.US, "Loan Calculator");

Map<Locale, String> titleMapLC = new HashMap<Locale, String>();

titleMapLC.put(Locale.US, "");

Map<Locale, String> descriptionMapLC = new HashMap<Locale, String>();

descriptionMapLC.put(Locale.US, "");

Map<Locale, String> keywordsMapLC = new HashMap<Locale, String>();

keywordsMapLC.put(Locale.US, "");

Map<Locale, String> robotsMapLC = new HashMap<Locale, String>();

robotsMapLC.put(Locale.US, "");

friendlyURLMapLC = "/loan-calculator";

Layout layoutLC = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, financeLayoutId, nameMapLC, titleMapLC,
	descriptionMapLC, keywordsMapLC, robotsMapLC, "portlet", false,
	friendlyURLMapLC, serviceContext);

UnicodeProperties typeSettingsPropertiesLC =
	layoutLC.getTypeSettingsProperties();

typeSettingsPropertiesLC.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesLC.setProperty("column-2", "61");
typeSettingsPropertiesLC.setProperty("column-1", "71_INSTANCE_ALJ5IzR8JFe3,");

layoutLC.setTypeSettingsProperties(typeSettingsPropertiesLC);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutLC.getLayoutId(),
	layoutLC.getTypeSettings());

UnicodeProperties propertiesLC = new UnicodeProperties();

propertiesLC.setProperty("displayStyle", "from-level-0");
propertiesLC.setProperty("headerType", "root-layout");
propertiesLC.setProperty("bulletStyle", "dots");
propertiesLC.setProperty("rootLayoutType", "absolute");
propertiesLC.setProperty("includedLayouts", "auto");
propertiesLC.setProperty("nestedChildren", "1");
propertiesLC.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceLC", "71_INSTANCE_ALJ5IzR8JFe3");

portletResourceLC = (String)actionRequest.getAttribute("portletResourceLC");

PortletPreferences portletPreferencesLC =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceLC);

for (Map.Entry<String, String> entry : propertiesLC.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesLC.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutLC.getPlid(), "71_INSTANCE_ALJ5IzR8JFe3",
	portletPreferencesLC);

//Finance page links to Currency Converter page.

UnicodeProperties typeSettingsPropertiesFinance =
	FinanceLayout.getTypeSettingsProperties();

typeSettingsPropertiesFinance.setProperty("groupId", String.valueOf(groupId));
typeSettingsPropertiesFinance.setProperty("show-alternate-links", "true");
typeSettingsPropertiesFinance.setProperty("sitemap-changefreq", "daily");
typeSettingsPropertiesFinance.setProperty(
	"linkToLayoutId", String.valueOf(layoutCC.getLayoutId()));
typeSettingsPropertiesFinance.setProperty("sitemap-include", "1");
typeSettingsPropertiesFinance.setProperty("layout-template-id", "2_columns_ii");

FinanceLayout.setTypeSettingsProperties(typeSettingsPropertiesFinance);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, financeLayoutId, FinanceLayout.getTypeSettings());

//News Part

Map<Locale, String> nameMapNews = new HashMap<Locale, String>();

nameMapNews.put(Locale.US, "News");

Map<Locale, String> titleMapNews = new HashMap<Locale, String>();

titleMapNews.put(Locale.US, "");

Map<Locale, String> descriptionMapNews = new HashMap<Locale, String>();

descriptionMapNews.put(Locale.US, "");

Map<Locale, String> keywordsMapNews = new HashMap<Locale, String>();

keywordsMapNews.put(Locale.US, "");

Map<Locale, String> robotsMapNews = new HashMap<Locale, String>();

robotsMapNews.put(Locale.US, "");

friendlyURLMapNews = "/news";

Layout newsLayout = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, 0, nameMapNews, titleMapNews,
	descriptionMapNews, keywordsMapNews, robotsMapNews, "link_to_layout", 
	false, friendlyURLMapNews, serviceContext);

newsLayoutId = newsLayout.getLayoutId();

Map<Locale, String> nameMapAlerts = new HashMap<Locale, String>();

nameMapAlerts.put(Locale.US, "Alerts");

Map<Locale, String> titleMapAlerts = new HashMap<Locale, String>();

titleMapAlerts.put(Locale.US, "");

Map<Locale, String> descriptionMapAlerts = new HashMap<Locale, String>();

descriptionMapAlerts.put(Locale.US, "");

Map<Locale, String> keywordsMapAlerts = new HashMap<Locale, String>();

keywordsMapAlerts.put(Locale.US, "");

Map<Locale, String> robotsMapAlerts = new HashMap<Locale, String>();

robotsMapAlerts.put(Locale.US, "");

friendlyURLMapAlerts = "/alerts";

Layout layoutAlerts = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, newsLayoutId, nameMapAlerts, titleMapAlerts,
	descriptionMapAlerts, keywordsMapAlerts, robotsMapAlerts, "portlet",
	false, friendlyURLMapAlerts, serviceContext);

UnicodeProperties typeSettingsPropertiesAlerts =
	layoutAlerts.getTypeSettingsProperties();

typeSettingsPropertiesAlerts.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesAlerts.setProperty("column-2", "83");
typeSettingsPropertiesAlerts.setProperty("column-1", "71_INSTANCE_ceopyQMpL4Tj,");

layoutAlerts.setTypeSettingsProperties(typeSettingsPropertiesAlerts);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutAlerts.getLayoutId(),
	layoutAlerts.getTypeSettings());

UnicodeProperties propertiesAlerts = new UnicodeProperties();

propertiesAlerts.setProperty("displayStyle", "from-level-0");
propertiesAlerts.setProperty("headerType", "root-layout");
propertiesAlerts.setProperty("bulletStyle", "dots");
propertiesAlerts.setProperty("rootLayoutType", "absolute");
propertiesAlerts.setProperty("includedLayouts", "auto");
propertiesAlerts.setProperty("nestedChildren", "1");
propertiesAlerts.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceAlerts", "71_INSTANCE_ceopyQMpL4Tj");

portletResourceAlerts = (String)actionRequest.getAttribute("portletResourceAlerts");

PortletPreferences portletPreferencesAlerts =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceAlerts);

for (Map.Entry<String, String> entry : propertiesAlerts.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesAlerts.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutAlerts.getPlid(), "71_INSTANCE_ceopyQMpL4Tj",
	portletPreferencesAlerts);

Map<Locale, String> nameMapAnnouncements = new HashMap<Locale, String>();

nameMapAnnouncements.put(Locale.US, "Announcements");

Map<Locale, String> titleMapAnnouncements = new HashMap<Locale, String>();

titleMapAnnouncements.put(Locale.US, "");

Map<Locale, String> descriptionMapAnnouncements = new HashMap<Locale, String>();

descriptionMapAnnouncements.put(Locale.US, "");

Map<Locale, String> keywordsMapAnnouncements = new HashMap<Locale, String>();

keywordsMapAnnouncements.put(Locale.US, "");

Map<Locale, String> robotsMapAnnouncements = new HashMap<Locale, String>();

robotsMapAnnouncements.put(Locale.US, "");

friendlyURLMapAnnouncements = "/announcements";

Layout layoutAnnouncements = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, newsLayoutId, nameMapAnnouncements,
	titleMapAnnouncements, descriptionMapAnnouncements,
	keywordsMapAnnouncements, robotsMapAnnouncements, "portlet", false,
	friendlyURLMapAnnouncements, serviceContext);

UnicodeProperties typeSettingsPropertiesAnnouncements =
	layoutAnnouncements.getTypeSettingsProperties();

typeSettingsPropertiesAnnouncements.setProperty(
	"layout-template-id", "2_columns_ii");
typeSettingsPropertiesAnnouncements.setProperty("column-2", "84");
typeSettingsPropertiesAnnouncements.setProperty(
	"column-1", "71_INSTANCE_9svey4gIknoo,");

layoutAnnouncements.setTypeSettingsProperties(
	typeSettingsPropertiesAnnouncements);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutAnnouncements.getLayoutId(),
	layoutAnnouncements.getTypeSettings());

UnicodeProperties propertiesAnnouncements = new UnicodeProperties();

propertiesAnnouncements.setProperty("displayStyle", "from-level-0");
propertiesAnnouncements.setProperty("headerType", "root-layout");
propertiesAnnouncements.setProperty("bulletStyle", "dots");
propertiesAnnouncements.setProperty("rootLayoutType", "absolute");
propertiesAnnouncements.setProperty("includedLayouts", "auto");
propertiesAnnouncements.setProperty("nestedChildren", "1");
propertiesAnnouncements.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute(
	"portletResourceAnnouncements", "71_INSTANCE_9svey4gIknoo");

portletResourceAnnouncements = (String)actionRequest.getAttribute(
	"portletResourceAnnouncements");

PortletPreferences portletPreferencesAnnouncements =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceAnnouncements);

for (Map.Entry<String, String> entry : propertiesAnnouncements.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesAnnouncements.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutAnnouncements.getPlid(), "71_INSTANCE_9svey4gIknoo",
	portletPreferencesAnnouncements);

Map<Locale, String> nameMapRSS = new HashMap<Locale, String>();

nameMapRSS.put(Locale.US, "RSS");

Map<Locale, String> titleMapRSS = new HashMap<Locale, String>();

titleMapRSS.put(Locale.US, "");

Map<Locale, String> descriptionMapRSS = new HashMap<Locale, String>();

descriptionMapRSS.put(Locale.US, "");

Map<Locale, String> keywordsMapRSS = new HashMap<Locale, String>();

keywordsMapRSS.put(Locale.US, "");

Map<Locale, String> robotsMapRSS = new HashMap<Locale, String>();

robotsMapRSS.put(Locale.US, "");

friendlyURLMapRSS = "/rss";

Layout layoutRSS = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, newsLayoutId, nameMapRSS, titleMapRSS,
	descriptionMapRSS, keywordsMapRSS, robotsMapRSS, "portlet", false,
	friendlyURLMapRSS, serviceContext);

UnicodeProperties typeSettingsPropertiesRSS =
	layoutRSS.getTypeSettingsProperties();

typeSettingsPropertiesRSS.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesRSS.setProperty("column-2", "39_INSTANCE_vn59KhKI7Y2w");
typeSettingsPropertiesRSS.setProperty("column-1", "71_INSTANCE_uxxsIbKD2cfQ,");

layoutRSS.setTypeSettingsProperties(typeSettingsPropertiesRSS);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutRSS.getLayoutId(),
	layoutRSS.getTypeSettings());

UnicodeProperties propertiesRSS = new UnicodeProperties();

propertiesRSS.setProperty("displayStyle", "from-level-0");
propertiesRSS.setProperty("headerType", "root-layout");
propertiesRSS.setProperty("bulletStyle", "dots");
propertiesRSS.setProperty("rootLayoutType", "absolute");
propertiesRSS.setProperty("includedLayouts", "auto");
propertiesRSS.setProperty("nestedChildren", "1");
propertiesRSS.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceRSS", "71_INSTANCE_uxxsIbKD2cfQ");

portletResourceRSS = (String)actionRequest.getAttribute("portletResourceRSS");

PortletPreferences portletPreferencesRSS =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceRSS);

for (Map.Entry<String, String> entry : propertiesRSS.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesRSS.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutRSS.getPlid(), "71_INSTANCE_uxxsIbKD2cfQ",
	portletPreferencesRSS);

//News page links to Alert Converter page.

UnicodeProperties typeSettingsPropertiesNews =
	newsLayout.getTypeSettingsProperties();

typeSettingsPropertiesNews.setProperty("groupId", String.valueOf(groupId));
typeSettingsPropertiesNews.setProperty("show-alternate-links", "true");
typeSettingsPropertiesNews.setProperty("sitemap-changefreq", "daily");
typeSettingsPropertiesNews.setProperty(
	"linkToLayoutId", String.valueOf(layoutAlerts.getLayoutId()));
typeSettingsPropertiesNews.setProperty("sitemap-include", "1");
typeSettingsPropertiesNews.setProperty("layout-template-id", "2_columns_ii");

newsLayout.setTypeSettingsProperties(typeSettingsPropertiesNews);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, newsLayoutId, newsLayout.getTypeSettings());

//Sample Part

Map<Locale, String> nameMapSample = new HashMap<Locale, String>();

nameMapSample.put(Locale.US, "Sample");

Map<Locale, String> titleMapSample = new HashMap<Locale, String>();

titleMapSample.put(Locale.US, "");

Map<Locale, String> descriptionMapSample = new HashMap<Locale, String>();

descriptionMapSample.put(Locale.US, "");

Map<Locale, String> keywordsMapSample = new HashMap<Locale, String>();

keywordsMapSample.put(Locale.US, "");

Map<Locale, String> robotsMapSample = new HashMap<Locale, String>();

robotsMapSample.put(Locale.US, "");

friendlyURLMapSample = "/sample";

Layout sampleLayout = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, 0, nameMapSample, titleMapSample,
	descriptionMapSample, keywordsMapSample, robotsMapSample,
	"link_to_layout", false, friendlyURLMapSample, serviceContext);

sampleLayoutId = sampleLayout.getLayoutId();

Map<Locale, String> nameMapHV = new HashMap<Locale, String>();

nameMapHV.put(Locale.US, "Hello Velocity");

Map<Locale, String> titleMapHV = new HashMap<Locale, String>();

titleMapHV.put(Locale.US, "");

Map<Locale, String> descriptionMapHV = new HashMap<Locale, String>();

descriptionMapHV.put(Locale.US, "");

Map<Locale, String> keywordsMapHV = new HashMap<Locale, String>();

keywordsMapHV.put(Locale.US, "");

Map<Locale, String> robotsMapHV = new HashMap<Locale, String>();

robotsMapHV.put(Locale.US, "");

friendlyURLMapHV = "/hello-velocity";

Layout layoutHV = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, sampleLayoutId, nameMapHV, titleMapHV,
	descriptionMapHV, keywordsMapHV, robotsMapHV, "portlet", false,
	friendlyURLMapHV, serviceContext);

UnicodeProperties typeSettingsPropertiesHV =
	layoutHV.getTypeSettingsProperties();

typeSettingsPropertiesHV.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesHV.setProperty("column-2", "50");
typeSettingsPropertiesHV.setProperty("column-1", "71_INSTANCE_pfxMm9207AWV,");

layoutHV.setTypeSettingsProperties(typeSettingsPropertiesHV);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutHV.getLayoutId(),
	layoutHV.getTypeSettings());

UnicodeProperties propertiesHV = new UnicodeProperties();

propertiesHV.setProperty("displayStyle", "from-level-0");
propertiesHV.setProperty("headerType", "root-layout");
propertiesHV.setProperty("bulletStyle", "dots");
propertiesHV.setProperty("rootLayoutType", "absolute");
propertiesHV.setProperty("includedLayouts", "auto");
propertiesHV.setProperty("nestedChildren", "1");
propertiesHV.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceHV", "71_INSTANCE_pfxMm9207AWV");

portletResourceHV = (String)actionRequest.getAttribute("portletResourceHV");

PortletPreferences portletPreferencesHV =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceHV);

for (Map.Entry<String, String> entry : propertiesHV.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesHV.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutHV.getPlid(), "71_INSTANCE_pfxMm9207AWV",
	portletPreferencesHV);

Map<Locale, String> nameMapHW = new HashMap<Locale, String>();

nameMapHW.put(Locale.US, "Hello World");

Map<Locale, String> titleMapHW = new HashMap<Locale, String>();

titleMapHW.put(Locale.US, "");

Map<Locale, String> descriptionMapHW = new HashMap<Locale, String>();

descriptionMapHW.put(Locale.US, "");

Map<Locale, String> keywordsMapHW = new HashMap<Locale, String>();

keywordsMapHW.put(Locale.US, "");

Map<Locale, String> robotsMapHW = new HashMap<Locale, String>();

robotsMapHW.put(Locale.US, "");

friendlyURLMapHW = "/hello-world";

Layout layoutHW = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, sampleLayoutId, nameMapHW, titleMapHW,
	descriptionMapHW, keywordsMapHW, robotsMapHW, "portlet", false,
	friendlyURLMapHW, serviceContext);

UnicodeProperties typeSettingsPropertiesHW =
	layoutHW.getTypeSettingsProperties();

typeSettingsPropertiesHW.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesHW.setProperty("column-2", "47");
typeSettingsPropertiesHW.setProperty("column-1", "71_INSTANCE_bs3KJ4i88GbQ,");

layoutHW.setTypeSettingsProperties(typeSettingsPropertiesHW);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutHW.getLayoutId(),
	layoutHW.getTypeSettings());

UnicodeProperties propertiesHW = new UnicodeProperties();

propertiesHW.setProperty("displayStyle", "from-level-0");
propertiesHW.setProperty("headerType", "root-layout");
propertiesHW.setProperty("bulletStyle", "dots");
propertiesHW.setProperty("rootLayoutType", "absolute");
propertiesHW.setProperty("includedLayouts", "auto");
propertiesHW.setProperty("nestedChildren", "1");
propertiesHW.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceHW", "71_INSTANCE_bs3KJ4i88GbQ");

portletResourceHW = (String)actionRequest.getAttribute("portletResourceHW");

PortletPreferences portletPreferencesHW =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceHW);

for (Map.Entry<String, String> entry : propertiesHW.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesHW.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutHW.getPlid(), "71_INSTANCE_bs3KJ4i88GbQ",
	portletPreferencesHW);

Map<Locale, String> nameMapIFrame = new HashMap<Locale, String>();

nameMapIFrame.put(Locale.US, "IFrame");

Map<Locale, String> titleMapIFrame = new HashMap<Locale, String>();

titleMapIFrame.put(Locale.US, "");

Map<Locale, String> descriptionMapIFrame = new HashMap<Locale, String>();

descriptionMapIFrame.put(Locale.US, "");

Map<Locale, String> keywordsMapIFrame = new HashMap<Locale, String>();

keywordsMapIFrame.put(Locale.US, "");

Map<Locale, String> robotsMapIFrame = new HashMap<Locale, String>();

robotsMapIFrame.put(Locale.US, "");

friendlyURLMapIFrame = "/iFrame";

Layout layoutIFrame = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, sampleLayoutId, nameMapIFrame, titleMapIFrame,
	descriptionMapIFrame, keywordsMapIFrame, robotsMapIFrame, "portlet",
	false, friendlyURLMapIFrame, serviceContext);

UnicodeProperties typeSettingsPropertiesIFrame =
	layoutIFrame.getTypeSettingsProperties();

typeSettingsPropertiesIFrame.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesIFrame.setProperty(
	"column-2", "48_INSTANCE_mpN1u52gzmbO");
typeSettingsPropertiesIFrame.setProperty(
	"column-1", "71_INSTANCE_5tPfn8V7Z2Sy,");

layoutIFrame.setTypeSettingsProperties(typeSettingsPropertiesIFrame);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutIFrame.getLayoutId(),
	layoutIFrame.getTypeSettings());

UnicodeProperties propertiesIFrame = new UnicodeProperties();

propertiesIFrame.setProperty("displayStyle", "from-level-0");
propertiesIFrame.setProperty("headerType", "root-layout");
propertiesIFrame.setProperty("bulletStyle", "dots");
propertiesIFrame.setProperty("rootLayoutType", "absolute");
propertiesIFrame.setProperty("includedLayouts", "auto");
propertiesIFrame.setProperty("nestedChildren", "1");
propertiesIFrame.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceIFrame", "71_INSTANCE_5tPfn8V7Z2Sy");

portletResourceIFrame = (String)actionRequest.getAttribute(
	"portletResourceIFrame");

PortletPreferences portletPreferencesIFrame =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceIFrame);

for (Map.Entry<String, String> entry : propertiesIFrame.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesIFrame.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutIFrame.getPlid(), "71_INSTANCE_5tPfn8V7Z2Sy",
	portletPreferencesIFrame);

Map<Locale, String> nameMapWP = new HashMap<Locale, String>();

nameMapWP.put(Locale.US, "Web Proxy");

Map<Locale, String> titleMapWP = new HashMap<Locale, String>();

titleMapWP.put(Locale.US, "");

Map<Locale, String> descriptionMapWP = new HashMap<Locale, String>();

descriptionMapWP.put(Locale.US, "");

Map<Locale, String> keywordsMapWP = new HashMap<Locale, String>();

keywordsMapWP.put(Locale.US, "");

Map<Locale, String> robotsMapWP = new HashMap<Locale, String>();

robotsMapWP.put(Locale.US, "");

friendlyURLMapWP = "/web-proxy";

Layout layoutWP = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, sampleLayoutId, nameMapWP, titleMapWP,
	descriptionMapWP, keywordsMapWP, robotsMapWP, "portlet", false,
	friendlyURLMapWP, serviceContext);

UnicodeProperties typeSettingsPropertiesWP =
	layoutWP.getTypeSettingsProperties();

typeSettingsPropertiesWP.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesWP.setProperty("column-2", "66_INSTANCE_BM7GHtVBl6df");
typeSettingsPropertiesWP.setProperty("column-1", "71_INSTANCE_y5f1MxkIhKvm,");

layoutWP.setTypeSettingsProperties(typeSettingsPropertiesWP);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutWP.getLayoutId(),
	layoutWP.getTypeSettings());

UnicodeProperties propertiesWP = new UnicodeProperties();

propertiesWP.setProperty("displayStyle", "from-level-0");
propertiesWP.setProperty("headerType", "root-layout");
propertiesWP.setProperty("bulletStyle", "dots");
propertiesWP.setProperty("rootLayoutType", "absolute");
propertiesWP.setProperty("includedLayouts", "auto");
propertiesWP.setProperty("nestedChildren", "1");
propertiesWP.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceWP", "71_INSTANCE_y5f1MxkIhKvm");

portletResourceWP = (String)actionRequest.getAttribute("portletResourceWP");

PortletPreferences portletPreferencesWP =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceWP);

for (Map.Entry<String, String> entry : propertiesWP.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesWP.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutWP.getPlid(), "71_INSTANCE_y5f1MxkIhKvm",
	portletPreferencesWP);

//Sample page link to Hello Velocity page.

UnicodeProperties typeSettingsPropertiesSample =
	sampleLayout.getTypeSettingsProperties();

typeSettingsPropertiesSample.setProperty("groupId", String.valueOf(groupId));
typeSettingsPropertiesSample.setProperty("show-alternate-links", "true");
typeSettingsPropertiesSample.setProperty("sitemap-changefreq", "daily");
typeSettingsPropertiesSample.setProperty(
	"linkToLayoutId", String.valueOf(layoutHV.getLayoutId()));
typeSettingsPropertiesSample.setProperty("sitemap-include", "1");
typeSettingsPropertiesSample.setProperty("layout-template-id", "2_columns_ii");

sampleLayout.setTypeSettingsProperties(typeSettingsPropertiesSample);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, sampleLayoutId, sampleLayout.getTypeSettings());

//Shopping Part

Map<Locale, String> nameMapShoppingP = new HashMap<Locale, String>();

nameMapShoppingP.put(Locale.US, "Shopping");

Map<Locale, String> titleMapShoppingP = new HashMap<Locale, String>();

titleMapShoppingP.put(Locale.US, "");

Map<Locale, String> descriptionMapShoppingP = new HashMap<Locale, String>();

descriptionMapShoppingP.put(Locale.US, "");

Map<Locale, String> keywordsMapShoppingP = new HashMap<Locale, String>();

keywordsMapShoppingP.put(Locale.US, "");

Map<Locale, String> robotsMapShoppingP = new HashMap<Locale, String>();

robotsMapShoppingP.put(Locale.US, "");

friendlyURLMapShoppingP = "/shopping";

Layout shoppingLayout = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, 0, nameMapShoppingP, titleMapShoppingP,
	descriptionMapShoppingP, keywordsMapShoppingP, robotsMapShoppingP,
	"link_to_layout", false, friendlyURLMapShoppingP, serviceContext);

shoppingLayoutId = shoppingLayout.getLayoutId();

Map<Locale, String> nameMapAmazon = new HashMap<Locale, String>();

nameMapAmazon.put(Locale.US, "Amazon Rankings");

Map<Locale, String> titleMapAmazon = new HashMap<Locale, String>();

titleMapAmazon.put(Locale.US, "");

Map<Locale, String> descriptionMapAmazon = new HashMap<Locale, String>();

descriptionMapAmazon.put(Locale.US, "");

Map<Locale, String> keywordsMapAmazon = new HashMap<Locale, String>();

keywordsMapAmazon.put(Locale.US, "");

Map<Locale, String> robotsMapAmazon = new HashMap<Locale, String>();

robotsMapAmazon.put(Locale.US, "");

friendlyURLMapAmazon = "/amazon-rankings";

Layout layoutAmazon = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, shoppingLayoutId, nameMapAmazon,
	titleMapAmazon, descriptionMapAmazon, keywordsMapAmazon,
	robotsMapAmazon, "portlet", false, friendlyURLMapAmazon,
	serviceContext);

UnicodeProperties typeSettingsPropertiesAmazon =
	layoutAmazon.getTypeSettingsProperties();

typeSettingsPropertiesAmazon.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesAmazon.setProperty("column-2", "67");
typeSettingsPropertiesAmazon.setProperty("column-1", "71_INSTANCE_uixmz2y3dFa6,");

layoutAmazon.setTypeSettingsProperties(typeSettingsPropertiesAmazon);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutAmazon.getLayoutId(),
	layoutAmazon.getTypeSettings());

UnicodeProperties propertiesAmazon = new UnicodeProperties();

propertiesAmazon.setProperty("displayStyle", "from-level-0");
propertiesAmazon.setProperty("headerType", "root-layout");
propertiesAmazon.setProperty("bulletStyle", "dots");
propertiesAmazon.setProperty("rootLayoutType", "absolute");
propertiesAmazon.setProperty("includedLayouts", "auto");
propertiesAmazon.setProperty("nestedChildren", "1");
propertiesAmazon.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceAmazon", "71_INSTANCE_uixmz2y3dFa6");

portletResourceAmazon = (String)actionRequest.getAttribute(
	"portletResourceAmazon");

PortletPreferences portletPreferencesAmazon =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceAmazon);

for (Map.Entry<String, String> entry : propertiesAmazon.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesAmazon.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutAmazon.getPlid(), "71_INSTANCE_uixmz2y3dFa6",
	portletPreferencesAmazon);

Map<Locale, String> nameMapShopping = new HashMap<Locale, String>();

nameMapShopping.put(Locale.US, "Shopping Portlet");

Map<Locale, String> titleMapShopping = new HashMap<Locale, String>();

titleMapShopping.put(Locale.US, "");

Map<Locale, String> descriptionMapShopping = new HashMap<Locale, String>();

descriptionMapShopping.put(Locale.US, "");

Map<Locale, String> keywordsMapShopping = new HashMap<Locale, String>();

keywordsMapShopping.put(Locale.US, "");

Map<Locale, String> robotsMapShopping = new HashMap<Locale, String>();

robotsMapShopping.put(Locale.US, "");

friendlyURLMapShopping = "/shopping-portlet";

Layout layoutShopping = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, shoppingLayoutId, nameMapShopping,
	titleMapShopping, descriptionMapShopping, keywordsMapShopping,
	robotsMapShopping, "portlet", false, friendlyURLMapShopping,
	serviceContext);

UnicodeProperties typeSettingsPropertiesShopping =
	layoutShopping.getTypeSettingsProperties();

typeSettingsPropertiesShopping.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesShopping.setProperty("column-2", "34");
typeSettingsPropertiesShopping.setProperty("column-1", "71_INSTANCE_uixmz6y3dFa6,");

layoutShopping.setTypeSettingsProperties(typeSettingsPropertiesShopping);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutShopping.getLayoutId(),
	layoutShopping.getTypeSettings());

UnicodeProperties propertiesShopping = new UnicodeProperties();

propertiesShopping.setProperty("displayStyle", "from-level-0");
propertiesShopping.setProperty("headerType", "root-layout");
propertiesShopping.setProperty("bulletStyle", "dots");
propertiesShopping.setProperty("rootLayoutType", "absolute");
propertiesShopping.setProperty("includedLayouts", "auto");
propertiesShopping.setProperty("nestedChildren", "1");
propertiesShopping.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute(
	"portletResourceShopping", "71_INSTANCE_uixmz6y3dFa6");

portletResourceShopping = (String)actionRequest.getAttribute(
	"portletResourceShopping");

PortletPreferences portletPreferencesShopping =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceShopping);

for (Map.Entry<String, String> entry : propertiesShopping.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesShopping.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutShopping.getPlid(), "71_INSTANCE_uixmz6y3dFa6",
	portletPreferencesShopping);

//Shopping page links to Amazon Rankings page.

UnicodeProperties typeSettingsPropertiesS =
	shoppingLayout.getTypeSettingsProperties();

typeSettingsPropertiesS.setProperty("groupId", String.valueOf(groupId));
typeSettingsPropertiesS.setProperty("show-alternate-links", "true");
typeSettingsPropertiesS.setProperty("sitemap-changefreq", "daily");
typeSettingsPropertiesS.setProperty(
	"linkToLayoutId", String.valueOf(layoutAmazon.getLayoutId()));
typeSettingsPropertiesS.setProperty("sitemap-include", "1");
typeSettingsPropertiesS.setProperty("layout-template-id", "2_columns_ii");

shoppingLayout.setTypeSettingsProperties(typeSettingsPropertiesS);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, shoppingLayoutId, shoppingLayout.getTypeSettings());

//Social Part

Map<Locale, String> nameMapSocial = new HashMap<Locale, String>();

nameMapSocial.put(Locale.US, "Social");

Map<Locale, String> titleMapSocial = new HashMap<Locale, String>();

titleMapSocial.put(Locale.US, "");

Map<Locale, String> descriptionMapSocial = new HashMap<Locale, String>();

descriptionMapSocial.put(Locale.US, "");

Map<Locale, String> keywordsMapSocial = new HashMap<Locale, String>();

keywordsMapSocial.put(Locale.US, "");

Map<Locale, String> robotsMapSocial = new HashMap<Locale, String>();

robotsMapSocial.put(Locale.US, "");

friendlyURLMapSocial = "/social";

Layout socialLayout = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, 0, nameMapSocial, titleMapSocial,
	descriptionMapSocial, keywordsMapSocial, robotsMapSocial,
	"link_to_layout", false, friendlyURLMapSocial, serviceContext);

socialLayoutId = socialLayout.getLayoutId();

Map<Locale, String> nameMapActivities = new HashMap<Locale, String>();

nameMapActivities.put(Locale.US, "Activities");

Map<Locale, String> titleMapActivities = new HashMap<Locale, String>();

titleMapActivities.put(Locale.US, "");

Map<Locale, String> descriptionMapActivities = new HashMap<Locale, String>();

descriptionMapActivities.put(Locale.US, "");

Map<Locale, String> keywordsMapActivities = new HashMap<Locale, String>();

keywordsMapActivities.put(Locale.US, "");

Map<Locale, String> robotsMapActivities = new HashMap<Locale, String>();

robotsMapActivities.put(Locale.US, "");

friendlyURLMapActivities = "/activities";

Layout layoutActivities = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, socialLayoutId, nameMapActivities,
	titleMapActivities, descriptionMapActivities, keywordsMapActivities,
	robotsMapActivities, "portlet", false, friendlyURLMapActivities,
	serviceContext);

UnicodeProperties typeSettingsPropertiesActivities =
	layoutActivities.getTypeSettingsProperties();

typeSettingsPropertiesActivities.setProperty(
	"layout-template-id", "2_columns_ii");
typeSettingsPropertiesActivities.setProperty("column-2", "116");
typeSettingsPropertiesActivities.setProperty(
	"column-1", "71_INSTANCE_uixmz6y3dFa7,");

layoutActivities.setTypeSettingsProperties(typeSettingsPropertiesActivities);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutActivities.getLayoutId(),
	layoutActivities.getTypeSettings());

UnicodeProperties propertiesActivities = new UnicodeProperties();

propertiesActivities.setProperty("displayStyle", "from-level-0");
propertiesActivities.setProperty("headerType", "root-layout");
propertiesActivities.setProperty("bulletStyle", "dots");
propertiesActivities.setProperty("rootLayoutType", "absolute");
propertiesActivities.setProperty("includedLayouts", "auto");
propertiesActivities.setProperty("nestedChildren", "1");
propertiesActivities.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute(
	"portletResourceActivities", "71_INSTANCE_uixmz6y3dFa7");

portletResourceActivities = (String)actionRequest.getAttribute(
	"portletResourceActivities");

PortletPreferences portletPreferencesActivities =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceActivities);

for (Map.Entry<String, String> entry : propertiesActivities.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesActivities.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutActivities.getPlid(), "71_INSTANCE_uixmz6y3dFa7",
	portletPreferencesActivities);

Map<Locale, String> nameMapStatistics = new HashMap<Locale, String>();

nameMapStatistics.put(Locale.US, "Statistics");

Map<Locale, String> titleMapStatistics = new HashMap<Locale, String>();

titleMapStatistics.put(Locale.US, "");

Map<Locale, String> descriptionMapStatistics = new HashMap<Locale, String>();

descriptionMapStatistics.put(Locale.US, "");

Map<Locale, String> keywordsMapStatistics = new HashMap<Locale, String>();

keywordsMapStatistics.put(Locale.US, "");

Map<Locale, String> robotsMapStatistics = new HashMap<Locale, String>();

robotsMapStatistics.put(Locale.US, "");

friendlyURLMapStatistics = "/statistics";

Layout layoutStatistics = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, socialLayoutId, nameMapStatistics,
	titleMapStatistics, descriptionMapStatistics, keywordsMapStatistics,
	robotsMapStatistics, "portlet", false, friendlyURLMapStatistics,
	serviceContext);

UnicodeProperties typeSettingsPropertiesStatistics =
	layoutStatistics.getTypeSettingsProperties();

typeSettingsPropertiesStatistics.setProperty(
	"layout-template-id", "2_columns_ii");
typeSettingsPropertiesStatistics.setProperty("column-2", "180,181,");
typeSettingsPropertiesStatistics.setProperty(
	"column-1", "71_INSTANCE_7aLiwAW9pz6q,");

layoutStatistics.setTypeSettingsProperties(typeSettingsPropertiesStatistics);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutStatistics.getLayoutId(),
	layoutStatistics.getTypeSettings());

UnicodeProperties propertiesStatistics = new UnicodeProperties();

propertiesStatistics.setProperty("displayStyle", "from-level-0");
propertiesStatistics.setProperty("headerType", "root-layout");
propertiesStatistics.setProperty("bulletStyle", "dots");
propertiesStatistics.setProperty("rootLayoutType", "absolute");
propertiesStatistics.setProperty("includedLayouts", "auto");
propertiesStatistics.setProperty("nestedChildren", "1");
propertiesStatistics.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute(
	"portletResourceStatistics", "71_INSTANCE_7aLiwAW9pz6q");

portletResourceStatistics = (String)actionRequest.getAttribute(
	"portletResourceStatistics");

PortletPreferences portletPreferencesStatistics =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceStatistics);

for (Map.Entry<String, String> entry : propertiesStatistics.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesStatistics.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutStatistics.getPlid(), "71_INSTANCE_7aLiwAW9pz6q",
	portletPreferencesStatistics);

Map<Locale, String> nameMapRequests = new HashMap<Locale, String>();

nameMapRequests.put(Locale.US, "Requests");

Map<Locale, String> titleMapRequests = new HashMap<Locale, String>();

titleMapRequests.put(Locale.US, "");

Map<Locale, String> descriptionMapRequests = new HashMap<Locale, String>();

descriptionMapRequests.put(Locale.US, "");

Map<Locale, String> keywordsMapRequests = new HashMap<Locale, String>();

keywordsMapRequests.put(Locale.US, "");

Map<Locale, String> robotsMapRequests = new HashMap<Locale, String>();

robotsMapRequests.put(Locale.US, "");

friendlyURLMapRequests = "/requests";

Layout layoutRequests = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, socialLayoutId, nameMapRequests,
	titleMapRequests, descriptionMapRequests, keywordsMapRequests,
	robotsMapRequests, "portlet", false, friendlyURLMapRequests,
	serviceContext);

UnicodeProperties typeSettingsPropertiesRequests =
	layoutRequests.getTypeSettingsProperties();

typeSettingsPropertiesRequests.setProperty(
	"layout-template-id", "2_columns_ii");
typeSettingsPropertiesRequests.setProperty("column-2", "121");
typeSettingsPropertiesRequests.setProperty(
	"column-1", "71_INSTANCE_Nk6uVxsVxeRo,");

layoutRequests.setTypeSettingsProperties(typeSettingsPropertiesRequests);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutRequests.getLayoutId(),
	layoutRequests.getTypeSettings());

UnicodeProperties propertiesRequests = new UnicodeProperties();

propertiesRequests.setProperty("displayStyle", "from-level-0");
propertiesRequests.setProperty("headerType", "root-layout");
propertiesRequests.setProperty("bulletStyle", "dots");
propertiesRequests.setProperty("rootLayoutType", "absolute");
propertiesRequests.setProperty("includedLayouts", "auto");
propertiesRequests.setProperty("nestedChildren", "1");
propertiesRequests.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute(
	"portletResourceRequests", "71_INSTANCE_Nk6uVxsVxeRo");

portletResourceRequests = (String)actionRequest.getAttribute(
	"portletResourceRequests");

PortletPreferences portletPreferencesRequests =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceRequests);

for (Map.Entry<String, String> entry : propertiesRequests.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesRequests.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutRequests.getPlid(), "71_INSTANCE_Nk6uVxsVxeRo",
	portletPreferencesRequests);

//Social page links to Activities page.

UnicodeProperties typeSettingsPropertiesSocial =
	socialLayout.getTypeSettingsProperties();

typeSettingsPropertiesSocial.setProperty("groupId", String.valueOf(groupId));
typeSettingsPropertiesSocial.setProperty("show-alternate-links", "true");
typeSettingsPropertiesSocial.setProperty("sitemap-changefreq", "daily");
typeSettingsPropertiesSocial.setProperty(
	"linkToLayoutId", String.valueOf(layoutActivities.getLayoutId()));
typeSettingsPropertiesSocial.setProperty("sitemap-include", "1");
typeSettingsPropertiesSocial.setProperty("layout-template-id", "2_columns_ii");

socialLayout.setTypeSettingsProperties(typeSettingsPropertiesSocial);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, socialLayoutId, socialLayout.getTypeSettings());

//Tools Part

Map<Locale, String> nameMapTools = new HashMap<Locale, String>();

nameMapTools.put(Locale.US, "Tools");

Map<Locale, String> titleMapTools = new HashMap<Locale, String>();

titleMapTools.put(Locale.US, "");

Map<Locale, String> descriptionMapTools = new HashMap<Locale, String>();

descriptionMapTools.put(Locale.US, "");

Map<Locale, String> keywordsMapTools = new HashMap<Locale, String>();

keywordsMapTools.put(Locale.US, "");

Map<Locale, String> robotsMapTools = new HashMap<Locale, String>();

robotsMapTools.put(Locale.US, "");

friendlyURLMapTools = "/tools";

Layout toolsLayout = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, 0, nameMapTools, titleMapTools,
	descriptionMapTools, keywordsMapTools, robotsMapTools,
	"link_to_layout", false, friendlyURLMapTools, serviceContext);

toolsLayoutId = toolsLayout.getLayoutId();

Map<Locale, String> nameMapDictionary = new HashMap<Locale, String>();

nameMapDictionary.put(Locale.US, "Dictionary");

Map<Locale, String> titleMapDictionary = new HashMap<Locale, String>();

titleMapDictionary.put(Locale.US, "");

Map<Locale, String> descriptionMapDictionary = new HashMap<Locale, String>();

descriptionMapDictionary.put(Locale.US, "");

Map<Locale, String> keywordsMapDictionary = new HashMap<Locale, String>();

keywordsMapDictionary.put(Locale.US, "");

Map<Locale, String> robotsMapDictionary = new HashMap<Locale, String>();

robotsMapDictionary.put(Locale.US, "");

friendlyURLMapDictionary = "/dictionary";

Layout layoutDictionary = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, toolsLayoutId, nameMapDictionary,
	titleMapDictionary, descriptionMapDictionary, keywordsMapDictionary,
	robotsMapDictionary, "portlet", false, friendlyURLMapDictionary,
	serviceContext);

UnicodeProperties typeSettingsPropertiesDictionary =
	layoutDictionary.getTypeSettingsProperties();

typeSettingsPropertiesDictionary.setProperty(
	"layout-template-id", "2_columns_ii");
typeSettingsPropertiesDictionary.setProperty("column-2", "23");
typeSettingsPropertiesDictionary.setProperty(
	"column-1", "71_INSTANCE_CUiKVFT7IRBd,");

layoutDictionary.setTypeSettingsProperties(typeSettingsPropertiesDictionary);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutDictionary.getLayoutId(),
	layoutDictionary.getTypeSettings());

UnicodeProperties propertiesDictionary = new UnicodeProperties();

propertiesDictionary.setProperty("displayStyle", "from-level-0");
propertiesDictionary.setProperty("headerType", "root-layout");
propertiesDictionary.setProperty("bulletStyle", "dots");
propertiesDictionary.setProperty("rootLayoutType", "absolute");
propertiesDictionary.setProperty("includedLayouts", "auto");
propertiesDictionary.setProperty("nestedChildren", "1");
propertiesDictionary.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute(
	"portletResourceDictionary", "71_INSTANCE_CUiKVFT7IRBd");

portletResourceDictionary = (String)actionRequest.getAttribute(
	"portletResourceDictionary");

PortletPreferences portletPreferencesDictionary =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceDictionary);

for (Map.Entry<String, String> entry : propertiesDictionary.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesDictionary.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutDictionary.getPlid(), "71_INSTANCE_CUiKVFT7IRBd",
	portletPreferencesDictionary);

Map<Locale, String> nameMapLanguage = new HashMap<Locale, String>();

nameMapLanguage.put(Locale.US, "Language Portlet");

Map<Locale, String> titleMapLanguage = new HashMap<Locale, String>();

titleMapLanguage.put(Locale.US, "");

Map<Locale, String> descriptionMapLanguage = new HashMap<Locale, String>();

descriptionMapLanguage.put(Locale.US, "");

Map<Locale, String> keywordsMapLanguage = new HashMap<Locale, String>();

keywordsMapLanguage.put(Locale.US, "");

Map<Locale, String> robotsMapLanguage = new HashMap<Locale, String>();

robotsMapLanguage.put(Locale.US, "");

friendlyURLMapLanguage = "/language-portlet";

Layout layoutLanguage = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, toolsLayoutId, nameMapLanguage,
	titleMapLanguage, descriptionMapLanguage, keywordsMapLanguage,
	robotsMapLanguage, "portlet", false, friendlyURLMapLanguage,
	serviceContext);

UnicodeProperties typeSettingsPropertiesLanguage =
	layoutLanguage.getTypeSettingsProperties();

typeSettingsPropertiesLanguage.setProperty(
	"layout-template-id", "2_columns_ii");
typeSettingsPropertiesLanguage.setProperty("column-2", "82");
typeSettingsPropertiesLanguage.setProperty(
	"column-1", "71_INSTANCE_7h25Ypo7Byd4,");

layoutLanguage.setTypeSettingsProperties(typeSettingsPropertiesLanguage);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutLanguage.getLayoutId(),
	layoutLanguage.getTypeSettings());

UnicodeProperties propertiesLanguage = new UnicodeProperties();

propertiesLanguage.setProperty("displayStyle", "from-level-0");
propertiesLanguage.setProperty("headerType", "root-layout");
propertiesLanguage.setProperty("bulletStyle", "dots");
propertiesLanguage.setProperty("rootLayoutType", "absolute");
propertiesLanguage.setProperty("includedLayouts", "auto");
propertiesLanguage.setProperty("nestedChildren", "1");
propertiesLanguage.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute(
	"portletResourceLanguage", "71_INSTANCE_7h25Ypo7Byd4");

portletResourceLanguage = (String)actionRequest.getAttribute(
	"portletResourceLanguage");

PortletPreferences portletPreferencesLanguage =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceLanguage);

for (Map.Entry<String, String> entry : propertiesLanguage.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesLanguage.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutLanguage.getPlid(), "71_INSTANCE_7h25Ypo7Byd4",
	portletPreferencesLanguage);

Map<Locale, String> nameMapNU = new HashMap<Locale, String>();

nameMapNU.put(Locale.US, "Network Utilities");

Map<Locale, String> titleMapNU = new HashMap<Locale, String>();

titleMapNU.put(Locale.US, "");

Map<Locale, String> descriptionMapNU = new HashMap<Locale, String>();

descriptionMapNU.put(Locale.US, "");

Map<Locale, String> keywordsMapNU = new HashMap<Locale, String>();

keywordsMapNU.put(Locale.US, "");

Map<Locale, String> robotsMapNU = new HashMap<Locale, String>();

robotsMapNU.put(Locale.US, "");

friendlyURLMapNU = "/network-utilities";

Layout layoutNU = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, toolsLayoutId, nameMapNU, titleMapNU,
	descriptionMapNU, keywordsMapNU, robotsMapNU, "portlet", false,
	friendlyURLMapNU, serviceContext);

UnicodeProperties typeSettingsPropertiesNU =
	layoutNU.getTypeSettingsProperties();

typeSettingsPropertiesNU.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesNU.setProperty("column-2", "30");
typeSettingsPropertiesNU.setProperty("column-1", "71_INSTANCE_rT4G4vSmVqOL,");

layoutNU.setTypeSettingsProperties(typeSettingsPropertiesNU);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutNU.getLayoutId(),
	layoutNU.getTypeSettings());

UnicodeProperties propertiesNU = new UnicodeProperties();

propertiesNU.setProperty("displayStyle", "from-level-0");
propertiesNU.setProperty("headerType", "root-layout");
propertiesNU.setProperty("bulletStyle", "dots");
propertiesNU.setProperty("rootLayoutType", "absolute");
propertiesNU.setProperty("includedLayouts", "auto");
propertiesNU.setProperty("nestedChildren", "1");
propertiesNU.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceNU", "71_INSTANCE_rT4G4vSmVqOL");

portletResourceNU = (String)actionRequest.getAttribute("portletResourceNU");

PortletPreferences portletPreferencesNU =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceNU);

for (Map.Entry<String, String> entry : propertiesNU.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesNU.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutNU.getPlid(), "71_INSTANCE_rT4G4vSmVqOL",
	portletPreferencesNU);

Map<Locale, String> nameMapPG = new HashMap<Locale, String>();

nameMapPG.put(Locale.US, "Password Generator");

Map<Locale, String> titleMapPG = new HashMap<Locale, String>();

titleMapPG.put(Locale.US, "");

Map<Locale, String> descriptionMapPG = new HashMap<Locale, String>();

descriptionMapPG.put(Locale.US, "");

Map<Locale, String> keywordsMapPG = new HashMap<Locale, String>();

keywordsMapPG.put(Locale.US, "");

Map<Locale, String> robotsMapPG = new HashMap<Locale, String>();

robotsMapPG.put(Locale.US, "");

friendlyURLMapPG = "/password-generator";

Layout layoutPG = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, toolsLayoutId, nameMapPG, titleMapPG,
	descriptionMapPG, keywordsMapPG, robotsMapPG, "portlet", false,
	friendlyURLMapPG, serviceContext);

UnicodeProperties typeSettingsPropertiesPG =
	layoutPG.getTypeSettingsProperties();

typeSettingsPropertiesPG.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesPG.setProperty("column-2", "70");
typeSettingsPropertiesPG.setProperty("column-1", "71_INSTANCE_U1NyroFwJGZ4,");

layoutPG.setTypeSettingsProperties(typeSettingsPropertiesPG);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutPG.getLayoutId(),
	layoutPG.getTypeSettings());

UnicodeProperties propertiesPG = new UnicodeProperties();

propertiesPG.setProperty("displayStyle", "from-level-0");
propertiesPG.setProperty("headerType", "root-layout");
propertiesPG.setProperty("bulletStyle", "dots");
propertiesPG.setProperty("rootLayoutType", "absolute");
propertiesPG.setProperty("includedLayouts", "auto");
propertiesPG.setProperty("nestedChildren", "1");
propertiesPG.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourcePG", "71_INSTANCE_U1NyroFwJGZ4");

portletResourcePG = (String)actionRequest.getAttribute("portletResourcePG");

PortletPreferences portletPreferencesPG =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourcePG);

for (Map.Entry<String, String> entry : propertiesPG.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesPG.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutPG.getPlid(), "71_INSTANCE_U1NyroFwJGZ4",
	portletPreferencesPG);

Map<Locale, String> nameMapQN = new HashMap<Locale, String>();

nameMapQN.put(Locale.US, "Quick Note");

Map<Locale, String> titleMapQN = new HashMap<Locale, String>();

titleMapQN.put(Locale.US, "");

Map<Locale, String> descriptionMapQN = new HashMap<Locale, String>();

descriptionMapQN.put(Locale.US, "");

Map<Locale, String> keywordsMapQN = new HashMap<Locale, String>();

keywordsMapQN.put(Locale.US, "");

Map<Locale, String> robotsMapQN = new HashMap<Locale, String>();

robotsMapQN.put(Locale.US, "");

friendlyURLMapQN = "/quick-note";

Layout layoutQN = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, toolsLayoutId, nameMapQN, titleMapQN,
	descriptionMapQN, keywordsMapQN, robotsMapQN, "portlet", false,
	friendlyURLMapQN, serviceContext);

UnicodeProperties typeSettingsPropertiesQN =
	layoutQN.getTypeSettingsProperties();

typeSettingsPropertiesQN.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesQN.setProperty("column-2", "97_INSTANCE_a1SJg50KuLFc");
typeSettingsPropertiesQN.setProperty("column-1", "71_INSTANCE_FPD3mqOPjU8G,");

layoutQN.setTypeSettingsProperties(typeSettingsPropertiesQN);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutQN.getLayoutId(),
	layoutQN.getTypeSettings());

UnicodeProperties propertiesQN = new UnicodeProperties();

propertiesQN.setProperty("displayStyle", "from-level-0");
propertiesQN.setProperty("headerType", "root-layout");
propertiesQN.setProperty("bulletStyle", "dots");
propertiesQN.setProperty("rootLayoutType", "absolute");
propertiesQN.setProperty("includedLayouts", "auto");
propertiesQN.setProperty("nestedChildren", "1");
propertiesQN.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceQN", "71_INSTANCE_FPD3mqOPjU8G");

portletResourceQN = (String)actionRequest.getAttribute("portletResourceQN");

PortletPreferences portletPreferencesQN =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceQN);

for (Map.Entry<String, String> entry : propertiesQN.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesQN.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutQN.getPlid(), "71_INSTANCE_FPD3mqOPjU8G",
	portletPreferencesQN);

Map<Locale, String> nameMapSearch = new HashMap<Locale, String>();

nameMapSearch.put(Locale.US, "Search");

Map<Locale, String> titleMapSearch = new HashMap<Locale, String>();

titleMapSearch.put(Locale.US, "");

Map<Locale, String> descriptionMapSearch = new HashMap<Locale, String>();

descriptionMapSearch.put(Locale.US, "");

Map<Locale, String> keywordsMapSearch = new HashMap<Locale, String>();

keywordsMapSearch.put(Locale.US, "");

Map<Locale, String> robotsMapSearch = new HashMap<Locale, String>();

robotsMapSearch.put(Locale.US, "");

friendlyURLMapSearch = "/search";

Layout layoutSearch = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, toolsLayoutId, nameMapSearch, titleMapSearch,
	descriptionMapSearch, keywordsMapSearch, robotsMapSearch, "portlet",
	false, friendlyURLMapSearch, serviceContext);

UnicodeProperties typeSettingsPropertiesSearch =
	layoutSearch.getTypeSettingsProperties();

typeSettingsPropertiesSearch.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesSearch.setProperty("column-2", "3");
typeSettingsPropertiesSearch.setProperty(
	"column-1", "71_INSTANCE_7rd4A6QxGxX8,");

layoutSearch.setTypeSettingsProperties(typeSettingsPropertiesSearch);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutSearch.getLayoutId(),
	layoutSearch.getTypeSettings());

UnicodeProperties propertiesSearch = new UnicodeProperties();

propertiesSearch.setProperty("displayStyle", "from-level-0");
propertiesSearch.setProperty("headerType", "root-layout");
propertiesSearch.setProperty("bulletStyle", "dots");
propertiesSearch.setProperty("rootLayoutType", "absolute");
propertiesSearch.setProperty("includedLayouts", "auto");
propertiesSearch.setProperty("nestedChildren", "1");
propertiesSearch.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceSearch", "71_INSTANCE_7rd4A6QxGxX8");

portletResourceSearch = (String)actionRequest.getAttribute(
	"portletResourceSearch");

PortletPreferences portletPreferencesSearch =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceSearch);

for (Map.Entry<String, String> entry : propertiesSearch.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesSearch.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutSearch.getPlid(), "71_INSTANCE_7rd4A6QxGxX8",
	portletPreferencesSearch);

Map<Locale, String> nameMapSignIn = new HashMap<Locale, String>();

nameMapSignIn.put(Locale.US, "Sign In");

Map<Locale, String> titleMapSignIn = new HashMap<Locale, String>();

titleMapSignIn.put(Locale.US, "");

Map<Locale, String> descriptionMapSignIn = new HashMap<Locale, String>();

descriptionMapSignIn.put(Locale.US, "");

Map<Locale, String> keywordsMapSignIn = new HashMap<Locale, String>();

keywordsMapSignIn.put(Locale.US, "");

Map<Locale, String> robotsMapSignIn = new HashMap<Locale, String>();

robotsMapSignIn.put(Locale.US, "");

friendlyURLMapSignIn = "/sign-in";

Layout layoutSignIn = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, toolsLayoutId, nameMapSignIn, titleMapSignIn,
	descriptionMapSignIn, keywordsMapSignIn, robotsMapSignIn, "portlet",
	false, friendlyURLMapSignIn, serviceContext);

UnicodeProperties typeSettingsPropertiesSignIn =
	layoutSignIn.getTypeSettingsProperties();

typeSettingsPropertiesSignIn.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesSignIn.setProperty("column-2", "58");
typeSettingsPropertiesSignIn.setProperty(
	"column-1", "71_INSTANCE_shdK63UBb9yk,");

layoutSignIn.setTypeSettingsProperties(typeSettingsPropertiesSignIn);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutSignIn.getLayoutId(),
	layoutSignIn.getTypeSettings());

UnicodeProperties propertiesSignIn = new UnicodeProperties();

propertiesSignIn.setProperty("displayStyle", "from-level-0");
propertiesSignIn.setProperty("headerType", "root-layout");
propertiesSignIn.setProperty("bulletStyle", "dots");
propertiesSignIn.setProperty("rootLayoutType", "absolute");
propertiesSignIn.setProperty("includedLayouts", "auto");
propertiesSignIn.setProperty("nestedChildren", "1");
propertiesSignIn.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceSignIn", "71_INSTANCE_shdK63UBb9yk");

portletResourceSignIn = (String)actionRequest.getAttribute(
	"portletResourceSignIn");

PortletPreferences portletPreferencesSignIn =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceSignIn);

for (Map.Entry<String, String> entry : propertiesSignIn.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesSignIn.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutSignIn.getPlid(), "71_INSTANCE_shdK63UBb9yk",
	portletPreferencesSignIn);

Map<Locale, String> nameMapSC = new HashMap<Locale, String>();

nameMapSC.put(Locale.US, "Software Catalog");

Map<Locale, String> titleMapSC = new HashMap<Locale, String>();

titleMapSC.put(Locale.US, "");

Map<Locale, String> descriptionMapSC = new HashMap<Locale, String>();

descriptionMapSC.put(Locale.US, "");

Map<Locale, String> keywordsMapSC = new HashMap<Locale, String>();

keywordsMapSC.put(Locale.US, "");

Map<Locale, String> robotsMapSC = new HashMap<Locale, String>();

robotsMapSC.put(Locale.US, "");

friendlyURLMapSC = "/software-catalog";

Layout layoutSC = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, toolsLayoutId, nameMapSC, titleMapSC,
	descriptionMapSC, keywordsMapSC, robotsMapSC, "portlet", false,
	friendlyURLMapSC, serviceContext);

UnicodeProperties typeSettingsPropertiesSC =
	layoutSC.getTypeSettingsProperties();

typeSettingsPropertiesSC.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesSC.setProperty("column-2", "98");
typeSettingsPropertiesSC.setProperty("column-1", "71_INSTANCE_X6zDk2NRQIS0,");

layoutSC.setTypeSettingsProperties(typeSettingsPropertiesSC);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutSC.getLayoutId(),
	layoutSC.getTypeSettings());

UnicodeProperties propertiesSC = new UnicodeProperties();

propertiesSC.setProperty("displayStyle", "from-level-0");
propertiesSC.setProperty("headerType", "root-layout");
propertiesSC.setProperty("bulletStyle", "dots");
propertiesSC.setProperty("rootLayoutType", "absolute");
propertiesSC.setProperty("includedLayouts", "auto");
propertiesSC.setProperty("nestedChildren", "1");
propertiesSC.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceSC", "71_INSTANCE_X6zDk2NRQIS0");

portletResourceSC = (String)actionRequest.getAttribute("portletResourceSC");

PortletPreferences portletPreferencesSC =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceSC);

for (Map.Entry<String, String> entry : propertiesSC.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesSC.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutSC.getPlid(), "71_INSTANCE_X6zDk2NRQIS0",
	portletPreferencesSC);

Map<Locale, String> nameMapTranslator = new HashMap<Locale, String>();

nameMapTranslator.put(Locale.US, "Translator");

Map<Locale, String> titleMapTranslator = new HashMap<Locale, String>();

titleMapTranslator.put(Locale.US, "");

Map<Locale, String> descriptionMapTranslator = new HashMap<Locale, String>();

descriptionMapTranslator.put(Locale.US, "");

Map<Locale, String> keywordsMapTranslator = new HashMap<Locale, String>();

keywordsMapTranslator.put(Locale.US, "");

Map<Locale, String> robotsMapTranslator = new HashMap<Locale, String>();

robotsMapTranslator.put(Locale.US, "");

friendlyURLMapTranslator = "/translator";

Layout layoutTranslator = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, toolsLayoutId, nameMapTranslator,
	titleMapTranslator, descriptionMapTranslator, keywordsMapTranslator,
	robotsMapTranslator, "portlet", false, friendlyURLMapTranslator,
	serviceContext);

UnicodeProperties typeSettingsPropertiesTranslator =
	layoutTranslator.getTypeSettingsProperties();

typeSettingsPropertiesTranslator.setProperty(
	"layout-template-id", "2_columns_ii");
typeSettingsPropertiesTranslator.setProperty("column-2", "26");
typeSettingsPropertiesTranslator.setProperty(
	"column-1", "71_INSTANCE_3mDQzC5CSJCA,");

layoutTranslator.setTypeSettingsProperties(typeSettingsPropertiesTranslator);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutTranslator.getLayoutId(),
	layoutTranslator.getTypeSettings());

UnicodeProperties propertiesTranslator = new UnicodeProperties();

propertiesTranslator.setProperty("displayStyle", "from-level-0");
propertiesTranslator.setProperty("headerType", "root-layout");
propertiesTranslator.setProperty("bulletStyle", "dots");
propertiesTranslator.setProperty("rootLayoutType", "absolute");
propertiesTranslator.setProperty("includedLayouts", "auto");
propertiesTranslator.setProperty("nestedChildren", "1");
propertiesTranslator.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute(
	"portletResourceTranslator", "71_INSTANCE_3mDQzC5CSJCA");

portletResourceTranslator = (String)actionRequest.getAttribute(
	"portletResourceTranslator");

PortletPreferences portletPreferencesTranslator =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceTranslator);

for (Map.Entry<String, String> entry : propertiesTranslator.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesTranslator.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutTranslator.getPlid(), "71_INSTANCE_3mDQzC5CSJCA",
	portletPreferencesTranslator);

Map<Locale, String> nameMapUC = new HashMap<Locale, String>();

nameMapUC.put(Locale.US, "Unit Converter");

Map<Locale, String> titleMapUC = new HashMap<Locale, String>();

titleMapUC.put(Locale.US, "");

Map<Locale, String> descriptionMapUC = new HashMap<Locale, String>();

descriptionMapUC.put(Locale.US, "");

Map<Locale, String> keywordsMapUC = new HashMap<Locale, String>();

keywordsMapUC.put(Locale.US, "");

Map<Locale, String> robotsMapUC = new HashMap<Locale, String>();

robotsMapUC.put(Locale.US, "");

friendlyURLMapUC = "/unit-converter";

Layout layoutUC = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, toolsLayoutId, nameMapUC, titleMapUC,
	descriptionMapUC, keywordsMapUC, robotsMapUC, "portlet", false,
	friendlyURLMapUC, serviceContext);

UnicodeProperties typeSettingsPropertiesUC =
	layoutUC.getTypeSettingsProperties();

typeSettingsPropertiesUC.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesUC.setProperty("column-2", "27");
typeSettingsPropertiesUC.setProperty("column-1", "71_INSTANCE_vMl8RSCKxaP8,");

layoutUC.setTypeSettingsProperties(typeSettingsPropertiesUC);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutUC.getLayoutId(),
	layoutUC.getTypeSettings());

UnicodeProperties propertiesUC = new UnicodeProperties();

propertiesUC.setProperty("displayStyle", "from-level-0");
propertiesUC.setProperty("headerType", "root-layout");
propertiesUC.setProperty("bulletStyle", "dots");
propertiesUC.setProperty("rootLayoutType", "absolute");
propertiesUC.setProperty("includedLayouts", "auto");
propertiesUC.setProperty("nestedChildren", "1");
propertiesUC.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceUC", "71_INSTANCE_vMl8RSCKxaP8");

portletResourceUC = (String)actionRequest.getAttribute("portletResourceUC");

PortletPreferences portletPreferencesUC =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceUC);

for (Map.Entry<String, String> entry : propertiesUC.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesUC.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutUC.getPlid(), "71_INSTANCE_vMl8RSCKxaP8",
	portletPreferencesUC);

//Tools page links to Dictionary page.

UnicodeProperties typeSettingsPropertiesTools =
	toolsLayout.getTypeSettingsProperties();

typeSettingsPropertiesTools.setProperty("groupId", String.valueOf(groupId));
typeSettingsPropertiesTools.setProperty("show-alternate-links", "true");
typeSettingsPropertiesTools.setProperty("sitemap-changefreq", "daily");
typeSettingsPropertiesTools.setProperty(
	"linkToLayoutId", String.valueOf(layoutDictionary.getLayoutId()));
typeSettingsPropertiesTools.setProperty("sitemap-include", "1");
typeSettingsPropertiesTools.setProperty("layout-template-id", "2_columns_ii");

toolsLayout.setTypeSettingsProperties(typeSettingsPropertiesTools);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, toolsLayoutId, toolsLayout.getTypeSettings());

//Wiki Part

Map<Locale, String> nameMapWiki = new HashMap<Locale, String>();

nameMapWiki.put(Locale.US, "Wiki Page");

Map<Locale, String> titleMapWiki = new HashMap<Locale, String>();

titleMapWiki.put(Locale.US, "");

Map<Locale, String> descriptionMapWiki = new HashMap<Locale, String>();

descriptionMapWiki.put(Locale.US, "");

Map<Locale, String> keywordsMapWiki = new HashMap<Locale, String>();

keywordsMapWiki.put(Locale.US, "");

Map<Locale, String> robotsMapWiki = new HashMap<Locale, String>();

robotsMapWiki.put(Locale.US, "");

friendlyURLMapWiki = "/wiki-page";

Layout wikiLayout = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, 0, nameMapWiki, titleMapWiki,
	descriptionMapWiki, keywordsMapWiki, robotsMapWiki, "link_to_layout",
	false, friendlyURLMapWiki, serviceContext);

wikiLayoutId = wikiLayout.getLayoutId();

Map<Locale, String> nameMapWikiD = new HashMap<Locale, String>();

nameMapWikiD.put(Locale.US, "Wiki Display");

Map<Locale, String> titleMapWikiD = new HashMap<Locale, String>();

titleMapWikiD.put(Locale.US, "");

Map<Locale, String> descriptionMapWikiD = new HashMap<Locale, String>();

descriptionMapWikiD.put(Locale.US, "");

Map<Locale, String> keywordsMapWikiD = new HashMap<Locale, String>();

keywordsMapWikiD.put(Locale.US, "");

Map<Locale, String> robotsMapWikiD = new HashMap<Locale, String>();

robotsMapWikiD.put(Locale.US, "");

friendlyURLMapWikiD = "/wiki-dispaly";

Layout layoutWikiD = LayoutLocalServiceUtil.addLayout(
	userId, groupId, false, wikiLayoutId, nameMapWikiD, titleMapWikiD,
	descriptionMapWikiD, keywordsMapWikiD, robotsMapWikiD, "portlet",
	false, friendlyURLMapWikiD, serviceContext);

UnicodeProperties typeSettingsPropertiesWikiD =
	layoutWikiD.getTypeSettingsProperties();

typeSettingsPropertiesWikiD.setProperty("layout-template-id", "2_columns_ii");
typeSettingsPropertiesWikiD.setProperty(
	"column-2", "54_INSTANCE_p6Z9AOc8mPgb,36");
typeSettingsPropertiesWikiD.setProperty(
	"column-1", "71_INSTANCE_7RY8M8EY5eT3,");

layoutWikiD.setTypeSettingsProperties(typeSettingsPropertiesWikiD);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, layoutWikiD.getLayoutId(),
	layoutWikiD.getTypeSettings());

UnicodeProperties propertiesWikiD = new UnicodeProperties();

propertiesWikiD.setProperty("displayStyle", "from-level-0");
propertiesWikiD.setProperty("headerType", "root-layout");
propertiesWikiD.setProperty("bulletStyle", "dots");
propertiesWikiD.setProperty("rootLayoutType", "absolute");
propertiesWikiD.setProperty("includedLayouts", "auto");
propertiesWikiD.setProperty("nestedChildren", "1");
propertiesWikiD.setProperty("rootLayoutLevel", "1");

actionRequest.setAttribute("portletResourceWikiD", "71_INSTANCE_7RY8M8EY5eT3");

portletResourceWikiD = (String)actionRequest.getAttribute("portletResourceWikiD");

PortletPreferences portletPreferencesWikiD =
	PortletPreferencesFactoryUtil.getPortletSetup(
		actionRequest, portletResourceWikiD);

for (Map.Entry<String, String> entry : propertiesWikiD.entrySet()) {
	String name = entry.getKey();
	String value = entry.getValue();

	portletPreferencesWikiD.setValue(name, value);
}

PortletPreferencesLocalServiceUtil.updatePreferences(
	0, 3, layoutWikiD.getPlid(), "71_INSTANCE_7RY8M8EY5eT3",
	portletPreferencesWikiD);

//Wiki page links to Wiki Portlet page.

UnicodeProperties typeSettingsPropertiesWikis =
	wikiLayout.getTypeSettingsProperties();

typeSettingsPropertiesWikis.setProperty("groupId", String.valueOf(groupId));
typeSettingsPropertiesWikis.setProperty("show-alternate-links", "true");
typeSettingsPropertiesWikis.setProperty("sitemap-changefreq", "daily");
typeSettingsPropertiesWikis.setProperty(
	"linkToLayoutId", String.valueOf(layoutWikiD.getLayoutId()));
typeSettingsPropertiesWikis.setProperty("sitemap-include", "1");
typeSettingsPropertiesWikis.setProperty("layout-template-id", "2_columns_ii");

wikiLayout.setTypeSettingsProperties(typeSettingsPropertiesWikis);

LayoutLocalServiceUtil.updateLayout(
	groupId, false, wikiLayoutId, wikiLayout.getTypeSettings());
